#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2546835685487147799) {
   out_2546835685487147799[0] = 0;
   out_2546835685487147799[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2546835685487147799[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2546835685487147799[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2546835685487147799[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2546835685487147799[5] = -sin(in_vec[1]);
   out_2546835685487147799[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2546835685487147799[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2546835685487147799[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2546835685487147799[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2546835685487147799[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2546835685487147799[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2546835685487147799[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2546835685487147799[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2546835685487147799[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2546835685487147799[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2546835685487147799[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2546835685487147799[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4651754224975951828) {
   out_4651754224975951828[0] = delta_x[0] + nom_x[0];
   out_4651754224975951828[1] = delta_x[1] + nom_x[1];
   out_4651754224975951828[2] = delta_x[2] + nom_x[2];
   out_4651754224975951828[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4651754224975951828[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4651754224975951828[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4651754224975951828[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4651754224975951828[7] = delta_x[6] + nom_x[7];
   out_4651754224975951828[8] = delta_x[7] + nom_x[8];
   out_4651754224975951828[9] = delta_x[8] + nom_x[9];
   out_4651754224975951828[10] = delta_x[9] + nom_x[10];
   out_4651754224975951828[11] = delta_x[10] + nom_x[11];
   out_4651754224975951828[12] = delta_x[11] + nom_x[12];
   out_4651754224975951828[13] = delta_x[12] + nom_x[13];
   out_4651754224975951828[14] = delta_x[13] + nom_x[14];
   out_4651754224975951828[15] = delta_x[14] + nom_x[15];
   out_4651754224975951828[16] = delta_x[15] + nom_x[16];
   out_4651754224975951828[17] = delta_x[16] + nom_x[17];
   out_4651754224975951828[18] = delta_x[17] + nom_x[18];
   out_4651754224975951828[19] = delta_x[18] + nom_x[19];
   out_4651754224975951828[20] = delta_x[19] + nom_x[20];
   out_4651754224975951828[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3920038101129836321) {
   out_3920038101129836321[0] = -nom_x[0] + true_x[0];
   out_3920038101129836321[1] = -nom_x[1] + true_x[1];
   out_3920038101129836321[2] = -nom_x[2] + true_x[2];
   out_3920038101129836321[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3920038101129836321[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3920038101129836321[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3920038101129836321[6] = -nom_x[7] + true_x[7];
   out_3920038101129836321[7] = -nom_x[8] + true_x[8];
   out_3920038101129836321[8] = -nom_x[9] + true_x[9];
   out_3920038101129836321[9] = -nom_x[10] + true_x[10];
   out_3920038101129836321[10] = -nom_x[11] + true_x[11];
   out_3920038101129836321[11] = -nom_x[12] + true_x[12];
   out_3920038101129836321[12] = -nom_x[13] + true_x[13];
   out_3920038101129836321[13] = -nom_x[14] + true_x[14];
   out_3920038101129836321[14] = -nom_x[15] + true_x[15];
   out_3920038101129836321[15] = -nom_x[16] + true_x[16];
   out_3920038101129836321[16] = -nom_x[17] + true_x[17];
   out_3920038101129836321[17] = -nom_x[18] + true_x[18];
   out_3920038101129836321[18] = -nom_x[19] + true_x[19];
   out_3920038101129836321[19] = -nom_x[20] + true_x[20];
   out_3920038101129836321[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4198656240219355807) {
   out_4198656240219355807[0] = 1.0;
   out_4198656240219355807[1] = 0;
   out_4198656240219355807[2] = 0;
   out_4198656240219355807[3] = 0;
   out_4198656240219355807[4] = 0;
   out_4198656240219355807[5] = 0;
   out_4198656240219355807[6] = 0;
   out_4198656240219355807[7] = 0;
   out_4198656240219355807[8] = 0;
   out_4198656240219355807[9] = 0;
   out_4198656240219355807[10] = 0;
   out_4198656240219355807[11] = 0;
   out_4198656240219355807[12] = 0;
   out_4198656240219355807[13] = 0;
   out_4198656240219355807[14] = 0;
   out_4198656240219355807[15] = 0;
   out_4198656240219355807[16] = 0;
   out_4198656240219355807[17] = 0;
   out_4198656240219355807[18] = 0;
   out_4198656240219355807[19] = 0;
   out_4198656240219355807[20] = 0;
   out_4198656240219355807[21] = 0;
   out_4198656240219355807[22] = 1.0;
   out_4198656240219355807[23] = 0;
   out_4198656240219355807[24] = 0;
   out_4198656240219355807[25] = 0;
   out_4198656240219355807[26] = 0;
   out_4198656240219355807[27] = 0;
   out_4198656240219355807[28] = 0;
   out_4198656240219355807[29] = 0;
   out_4198656240219355807[30] = 0;
   out_4198656240219355807[31] = 0;
   out_4198656240219355807[32] = 0;
   out_4198656240219355807[33] = 0;
   out_4198656240219355807[34] = 0;
   out_4198656240219355807[35] = 0;
   out_4198656240219355807[36] = 0;
   out_4198656240219355807[37] = 0;
   out_4198656240219355807[38] = 0;
   out_4198656240219355807[39] = 0;
   out_4198656240219355807[40] = 0;
   out_4198656240219355807[41] = 0;
   out_4198656240219355807[42] = 0;
   out_4198656240219355807[43] = 0;
   out_4198656240219355807[44] = 1.0;
   out_4198656240219355807[45] = 0;
   out_4198656240219355807[46] = 0;
   out_4198656240219355807[47] = 0;
   out_4198656240219355807[48] = 0;
   out_4198656240219355807[49] = 0;
   out_4198656240219355807[50] = 0;
   out_4198656240219355807[51] = 0;
   out_4198656240219355807[52] = 0;
   out_4198656240219355807[53] = 0;
   out_4198656240219355807[54] = 0;
   out_4198656240219355807[55] = 0;
   out_4198656240219355807[56] = 0;
   out_4198656240219355807[57] = 0;
   out_4198656240219355807[58] = 0;
   out_4198656240219355807[59] = 0;
   out_4198656240219355807[60] = 0;
   out_4198656240219355807[61] = 0;
   out_4198656240219355807[62] = 0;
   out_4198656240219355807[63] = 0;
   out_4198656240219355807[64] = 0;
   out_4198656240219355807[65] = 0;
   out_4198656240219355807[66] = -0.5*state[4];
   out_4198656240219355807[67] = -0.5*state[5];
   out_4198656240219355807[68] = -0.5*state[6];
   out_4198656240219355807[69] = 0;
   out_4198656240219355807[70] = 0;
   out_4198656240219355807[71] = 0;
   out_4198656240219355807[72] = 0;
   out_4198656240219355807[73] = 0;
   out_4198656240219355807[74] = 0;
   out_4198656240219355807[75] = 0;
   out_4198656240219355807[76] = 0;
   out_4198656240219355807[77] = 0;
   out_4198656240219355807[78] = 0;
   out_4198656240219355807[79] = 0;
   out_4198656240219355807[80] = 0;
   out_4198656240219355807[81] = 0;
   out_4198656240219355807[82] = 0;
   out_4198656240219355807[83] = 0;
   out_4198656240219355807[84] = 0;
   out_4198656240219355807[85] = 0;
   out_4198656240219355807[86] = 0;
   out_4198656240219355807[87] = 0.5*state[3];
   out_4198656240219355807[88] = 0.5*state[6];
   out_4198656240219355807[89] = -0.5*state[5];
   out_4198656240219355807[90] = 0;
   out_4198656240219355807[91] = 0;
   out_4198656240219355807[92] = 0;
   out_4198656240219355807[93] = 0;
   out_4198656240219355807[94] = 0;
   out_4198656240219355807[95] = 0;
   out_4198656240219355807[96] = 0;
   out_4198656240219355807[97] = 0;
   out_4198656240219355807[98] = 0;
   out_4198656240219355807[99] = 0;
   out_4198656240219355807[100] = 0;
   out_4198656240219355807[101] = 0;
   out_4198656240219355807[102] = 0;
   out_4198656240219355807[103] = 0;
   out_4198656240219355807[104] = 0;
   out_4198656240219355807[105] = 0;
   out_4198656240219355807[106] = 0;
   out_4198656240219355807[107] = 0;
   out_4198656240219355807[108] = -0.5*state[6];
   out_4198656240219355807[109] = 0.5*state[3];
   out_4198656240219355807[110] = 0.5*state[4];
   out_4198656240219355807[111] = 0;
   out_4198656240219355807[112] = 0;
   out_4198656240219355807[113] = 0;
   out_4198656240219355807[114] = 0;
   out_4198656240219355807[115] = 0;
   out_4198656240219355807[116] = 0;
   out_4198656240219355807[117] = 0;
   out_4198656240219355807[118] = 0;
   out_4198656240219355807[119] = 0;
   out_4198656240219355807[120] = 0;
   out_4198656240219355807[121] = 0;
   out_4198656240219355807[122] = 0;
   out_4198656240219355807[123] = 0;
   out_4198656240219355807[124] = 0;
   out_4198656240219355807[125] = 0;
   out_4198656240219355807[126] = 0;
   out_4198656240219355807[127] = 0;
   out_4198656240219355807[128] = 0;
   out_4198656240219355807[129] = 0.5*state[5];
   out_4198656240219355807[130] = -0.5*state[4];
   out_4198656240219355807[131] = 0.5*state[3];
   out_4198656240219355807[132] = 0;
   out_4198656240219355807[133] = 0;
   out_4198656240219355807[134] = 0;
   out_4198656240219355807[135] = 0;
   out_4198656240219355807[136] = 0;
   out_4198656240219355807[137] = 0;
   out_4198656240219355807[138] = 0;
   out_4198656240219355807[139] = 0;
   out_4198656240219355807[140] = 0;
   out_4198656240219355807[141] = 0;
   out_4198656240219355807[142] = 0;
   out_4198656240219355807[143] = 0;
   out_4198656240219355807[144] = 0;
   out_4198656240219355807[145] = 0;
   out_4198656240219355807[146] = 0;
   out_4198656240219355807[147] = 0;
   out_4198656240219355807[148] = 0;
   out_4198656240219355807[149] = 0;
   out_4198656240219355807[150] = 0;
   out_4198656240219355807[151] = 0;
   out_4198656240219355807[152] = 0;
   out_4198656240219355807[153] = 1.0;
   out_4198656240219355807[154] = 0;
   out_4198656240219355807[155] = 0;
   out_4198656240219355807[156] = 0;
   out_4198656240219355807[157] = 0;
   out_4198656240219355807[158] = 0;
   out_4198656240219355807[159] = 0;
   out_4198656240219355807[160] = 0;
   out_4198656240219355807[161] = 0;
   out_4198656240219355807[162] = 0;
   out_4198656240219355807[163] = 0;
   out_4198656240219355807[164] = 0;
   out_4198656240219355807[165] = 0;
   out_4198656240219355807[166] = 0;
   out_4198656240219355807[167] = 0;
   out_4198656240219355807[168] = 0;
   out_4198656240219355807[169] = 0;
   out_4198656240219355807[170] = 0;
   out_4198656240219355807[171] = 0;
   out_4198656240219355807[172] = 0;
   out_4198656240219355807[173] = 0;
   out_4198656240219355807[174] = 0;
   out_4198656240219355807[175] = 1.0;
   out_4198656240219355807[176] = 0;
   out_4198656240219355807[177] = 0;
   out_4198656240219355807[178] = 0;
   out_4198656240219355807[179] = 0;
   out_4198656240219355807[180] = 0;
   out_4198656240219355807[181] = 0;
   out_4198656240219355807[182] = 0;
   out_4198656240219355807[183] = 0;
   out_4198656240219355807[184] = 0;
   out_4198656240219355807[185] = 0;
   out_4198656240219355807[186] = 0;
   out_4198656240219355807[187] = 0;
   out_4198656240219355807[188] = 0;
   out_4198656240219355807[189] = 0;
   out_4198656240219355807[190] = 0;
   out_4198656240219355807[191] = 0;
   out_4198656240219355807[192] = 0;
   out_4198656240219355807[193] = 0;
   out_4198656240219355807[194] = 0;
   out_4198656240219355807[195] = 0;
   out_4198656240219355807[196] = 0;
   out_4198656240219355807[197] = 1.0;
   out_4198656240219355807[198] = 0;
   out_4198656240219355807[199] = 0;
   out_4198656240219355807[200] = 0;
   out_4198656240219355807[201] = 0;
   out_4198656240219355807[202] = 0;
   out_4198656240219355807[203] = 0;
   out_4198656240219355807[204] = 0;
   out_4198656240219355807[205] = 0;
   out_4198656240219355807[206] = 0;
   out_4198656240219355807[207] = 0;
   out_4198656240219355807[208] = 0;
   out_4198656240219355807[209] = 0;
   out_4198656240219355807[210] = 0;
   out_4198656240219355807[211] = 0;
   out_4198656240219355807[212] = 0;
   out_4198656240219355807[213] = 0;
   out_4198656240219355807[214] = 0;
   out_4198656240219355807[215] = 0;
   out_4198656240219355807[216] = 0;
   out_4198656240219355807[217] = 0;
   out_4198656240219355807[218] = 0;
   out_4198656240219355807[219] = 1.0;
   out_4198656240219355807[220] = 0;
   out_4198656240219355807[221] = 0;
   out_4198656240219355807[222] = 0;
   out_4198656240219355807[223] = 0;
   out_4198656240219355807[224] = 0;
   out_4198656240219355807[225] = 0;
   out_4198656240219355807[226] = 0;
   out_4198656240219355807[227] = 0;
   out_4198656240219355807[228] = 0;
   out_4198656240219355807[229] = 0;
   out_4198656240219355807[230] = 0;
   out_4198656240219355807[231] = 0;
   out_4198656240219355807[232] = 0;
   out_4198656240219355807[233] = 0;
   out_4198656240219355807[234] = 0;
   out_4198656240219355807[235] = 0;
   out_4198656240219355807[236] = 0;
   out_4198656240219355807[237] = 0;
   out_4198656240219355807[238] = 0;
   out_4198656240219355807[239] = 0;
   out_4198656240219355807[240] = 0;
   out_4198656240219355807[241] = 1.0;
   out_4198656240219355807[242] = 0;
   out_4198656240219355807[243] = 0;
   out_4198656240219355807[244] = 0;
   out_4198656240219355807[245] = 0;
   out_4198656240219355807[246] = 0;
   out_4198656240219355807[247] = 0;
   out_4198656240219355807[248] = 0;
   out_4198656240219355807[249] = 0;
   out_4198656240219355807[250] = 0;
   out_4198656240219355807[251] = 0;
   out_4198656240219355807[252] = 0;
   out_4198656240219355807[253] = 0;
   out_4198656240219355807[254] = 0;
   out_4198656240219355807[255] = 0;
   out_4198656240219355807[256] = 0;
   out_4198656240219355807[257] = 0;
   out_4198656240219355807[258] = 0;
   out_4198656240219355807[259] = 0;
   out_4198656240219355807[260] = 0;
   out_4198656240219355807[261] = 0;
   out_4198656240219355807[262] = 0;
   out_4198656240219355807[263] = 1.0;
   out_4198656240219355807[264] = 0;
   out_4198656240219355807[265] = 0;
   out_4198656240219355807[266] = 0;
   out_4198656240219355807[267] = 0;
   out_4198656240219355807[268] = 0;
   out_4198656240219355807[269] = 0;
   out_4198656240219355807[270] = 0;
   out_4198656240219355807[271] = 0;
   out_4198656240219355807[272] = 0;
   out_4198656240219355807[273] = 0;
   out_4198656240219355807[274] = 0;
   out_4198656240219355807[275] = 0;
   out_4198656240219355807[276] = 0;
   out_4198656240219355807[277] = 0;
   out_4198656240219355807[278] = 0;
   out_4198656240219355807[279] = 0;
   out_4198656240219355807[280] = 0;
   out_4198656240219355807[281] = 0;
   out_4198656240219355807[282] = 0;
   out_4198656240219355807[283] = 0;
   out_4198656240219355807[284] = 0;
   out_4198656240219355807[285] = 1.0;
   out_4198656240219355807[286] = 0;
   out_4198656240219355807[287] = 0;
   out_4198656240219355807[288] = 0;
   out_4198656240219355807[289] = 0;
   out_4198656240219355807[290] = 0;
   out_4198656240219355807[291] = 0;
   out_4198656240219355807[292] = 0;
   out_4198656240219355807[293] = 0;
   out_4198656240219355807[294] = 0;
   out_4198656240219355807[295] = 0;
   out_4198656240219355807[296] = 0;
   out_4198656240219355807[297] = 0;
   out_4198656240219355807[298] = 0;
   out_4198656240219355807[299] = 0;
   out_4198656240219355807[300] = 0;
   out_4198656240219355807[301] = 0;
   out_4198656240219355807[302] = 0;
   out_4198656240219355807[303] = 0;
   out_4198656240219355807[304] = 0;
   out_4198656240219355807[305] = 0;
   out_4198656240219355807[306] = 0;
   out_4198656240219355807[307] = 1.0;
   out_4198656240219355807[308] = 0;
   out_4198656240219355807[309] = 0;
   out_4198656240219355807[310] = 0;
   out_4198656240219355807[311] = 0;
   out_4198656240219355807[312] = 0;
   out_4198656240219355807[313] = 0;
   out_4198656240219355807[314] = 0;
   out_4198656240219355807[315] = 0;
   out_4198656240219355807[316] = 0;
   out_4198656240219355807[317] = 0;
   out_4198656240219355807[318] = 0;
   out_4198656240219355807[319] = 0;
   out_4198656240219355807[320] = 0;
   out_4198656240219355807[321] = 0;
   out_4198656240219355807[322] = 0;
   out_4198656240219355807[323] = 0;
   out_4198656240219355807[324] = 0;
   out_4198656240219355807[325] = 0;
   out_4198656240219355807[326] = 0;
   out_4198656240219355807[327] = 0;
   out_4198656240219355807[328] = 0;
   out_4198656240219355807[329] = 1.0;
   out_4198656240219355807[330] = 0;
   out_4198656240219355807[331] = 0;
   out_4198656240219355807[332] = 0;
   out_4198656240219355807[333] = 0;
   out_4198656240219355807[334] = 0;
   out_4198656240219355807[335] = 0;
   out_4198656240219355807[336] = 0;
   out_4198656240219355807[337] = 0;
   out_4198656240219355807[338] = 0;
   out_4198656240219355807[339] = 0;
   out_4198656240219355807[340] = 0;
   out_4198656240219355807[341] = 0;
   out_4198656240219355807[342] = 0;
   out_4198656240219355807[343] = 0;
   out_4198656240219355807[344] = 0;
   out_4198656240219355807[345] = 0;
   out_4198656240219355807[346] = 0;
   out_4198656240219355807[347] = 0;
   out_4198656240219355807[348] = 0;
   out_4198656240219355807[349] = 0;
   out_4198656240219355807[350] = 0;
   out_4198656240219355807[351] = 1.0;
   out_4198656240219355807[352] = 0;
   out_4198656240219355807[353] = 0;
   out_4198656240219355807[354] = 0;
   out_4198656240219355807[355] = 0;
   out_4198656240219355807[356] = 0;
   out_4198656240219355807[357] = 0;
   out_4198656240219355807[358] = 0;
   out_4198656240219355807[359] = 0;
   out_4198656240219355807[360] = 0;
   out_4198656240219355807[361] = 0;
   out_4198656240219355807[362] = 0;
   out_4198656240219355807[363] = 0;
   out_4198656240219355807[364] = 0;
   out_4198656240219355807[365] = 0;
   out_4198656240219355807[366] = 0;
   out_4198656240219355807[367] = 0;
   out_4198656240219355807[368] = 0;
   out_4198656240219355807[369] = 0;
   out_4198656240219355807[370] = 0;
   out_4198656240219355807[371] = 0;
   out_4198656240219355807[372] = 0;
   out_4198656240219355807[373] = 1.0;
   out_4198656240219355807[374] = 0;
   out_4198656240219355807[375] = 0;
   out_4198656240219355807[376] = 0;
   out_4198656240219355807[377] = 0;
   out_4198656240219355807[378] = 0;
   out_4198656240219355807[379] = 0;
   out_4198656240219355807[380] = 0;
   out_4198656240219355807[381] = 0;
   out_4198656240219355807[382] = 0;
   out_4198656240219355807[383] = 0;
   out_4198656240219355807[384] = 0;
   out_4198656240219355807[385] = 0;
   out_4198656240219355807[386] = 0;
   out_4198656240219355807[387] = 0;
   out_4198656240219355807[388] = 0;
   out_4198656240219355807[389] = 0;
   out_4198656240219355807[390] = 0;
   out_4198656240219355807[391] = 0;
   out_4198656240219355807[392] = 0;
   out_4198656240219355807[393] = 0;
   out_4198656240219355807[394] = 0;
   out_4198656240219355807[395] = 1.0;
   out_4198656240219355807[396] = 0;
   out_4198656240219355807[397] = 0;
   out_4198656240219355807[398] = 0;
   out_4198656240219355807[399] = 0;
   out_4198656240219355807[400] = 0;
   out_4198656240219355807[401] = 0;
   out_4198656240219355807[402] = 0;
   out_4198656240219355807[403] = 0;
   out_4198656240219355807[404] = 0;
   out_4198656240219355807[405] = 0;
   out_4198656240219355807[406] = 0;
   out_4198656240219355807[407] = 0;
   out_4198656240219355807[408] = 0;
   out_4198656240219355807[409] = 0;
   out_4198656240219355807[410] = 0;
   out_4198656240219355807[411] = 0;
   out_4198656240219355807[412] = 0;
   out_4198656240219355807[413] = 0;
   out_4198656240219355807[414] = 0;
   out_4198656240219355807[415] = 0;
   out_4198656240219355807[416] = 0;
   out_4198656240219355807[417] = 1.0;
   out_4198656240219355807[418] = 0;
   out_4198656240219355807[419] = 0;
   out_4198656240219355807[420] = 0;
   out_4198656240219355807[421] = 0;
   out_4198656240219355807[422] = 0;
   out_4198656240219355807[423] = 0;
   out_4198656240219355807[424] = 0;
   out_4198656240219355807[425] = 0;
   out_4198656240219355807[426] = 0;
   out_4198656240219355807[427] = 0;
   out_4198656240219355807[428] = 0;
   out_4198656240219355807[429] = 0;
   out_4198656240219355807[430] = 0;
   out_4198656240219355807[431] = 0;
   out_4198656240219355807[432] = 0;
   out_4198656240219355807[433] = 0;
   out_4198656240219355807[434] = 0;
   out_4198656240219355807[435] = 0;
   out_4198656240219355807[436] = 0;
   out_4198656240219355807[437] = 0;
   out_4198656240219355807[438] = 0;
   out_4198656240219355807[439] = 1.0;
   out_4198656240219355807[440] = 0;
   out_4198656240219355807[441] = 0;
   out_4198656240219355807[442] = 0;
   out_4198656240219355807[443] = 0;
   out_4198656240219355807[444] = 0;
   out_4198656240219355807[445] = 0;
   out_4198656240219355807[446] = 0;
   out_4198656240219355807[447] = 0;
   out_4198656240219355807[448] = 0;
   out_4198656240219355807[449] = 0;
   out_4198656240219355807[450] = 0;
   out_4198656240219355807[451] = 0;
   out_4198656240219355807[452] = 0;
   out_4198656240219355807[453] = 0;
   out_4198656240219355807[454] = 0;
   out_4198656240219355807[455] = 0;
   out_4198656240219355807[456] = 0;
   out_4198656240219355807[457] = 0;
   out_4198656240219355807[458] = 0;
   out_4198656240219355807[459] = 0;
   out_4198656240219355807[460] = 0;
   out_4198656240219355807[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5080123020625053129) {
   out_5080123020625053129[0] = dt*state[7] + state[0];
   out_5080123020625053129[1] = dt*state[8] + state[1];
   out_5080123020625053129[2] = dt*state[9] + state[2];
   out_5080123020625053129[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5080123020625053129[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5080123020625053129[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5080123020625053129[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5080123020625053129[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5080123020625053129[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5080123020625053129[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5080123020625053129[10] = state[10];
   out_5080123020625053129[11] = state[11];
   out_5080123020625053129[12] = state[12];
   out_5080123020625053129[13] = state[13];
   out_5080123020625053129[14] = state[14];
   out_5080123020625053129[15] = state[15];
   out_5080123020625053129[16] = state[16];
   out_5080123020625053129[17] = state[17];
   out_5080123020625053129[18] = state[18];
   out_5080123020625053129[19] = state[19];
   out_5080123020625053129[20] = state[20];
   out_5080123020625053129[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3186097261203045542) {
   out_3186097261203045542[0] = 1;
   out_3186097261203045542[1] = 0;
   out_3186097261203045542[2] = 0;
   out_3186097261203045542[3] = 0;
   out_3186097261203045542[4] = 0;
   out_3186097261203045542[5] = 0;
   out_3186097261203045542[6] = dt;
   out_3186097261203045542[7] = 0;
   out_3186097261203045542[8] = 0;
   out_3186097261203045542[9] = 0;
   out_3186097261203045542[10] = 0;
   out_3186097261203045542[11] = 0;
   out_3186097261203045542[12] = 0;
   out_3186097261203045542[13] = 0;
   out_3186097261203045542[14] = 0;
   out_3186097261203045542[15] = 0;
   out_3186097261203045542[16] = 0;
   out_3186097261203045542[17] = 0;
   out_3186097261203045542[18] = 0;
   out_3186097261203045542[19] = 0;
   out_3186097261203045542[20] = 0;
   out_3186097261203045542[21] = 0;
   out_3186097261203045542[22] = 1;
   out_3186097261203045542[23] = 0;
   out_3186097261203045542[24] = 0;
   out_3186097261203045542[25] = 0;
   out_3186097261203045542[26] = 0;
   out_3186097261203045542[27] = 0;
   out_3186097261203045542[28] = dt;
   out_3186097261203045542[29] = 0;
   out_3186097261203045542[30] = 0;
   out_3186097261203045542[31] = 0;
   out_3186097261203045542[32] = 0;
   out_3186097261203045542[33] = 0;
   out_3186097261203045542[34] = 0;
   out_3186097261203045542[35] = 0;
   out_3186097261203045542[36] = 0;
   out_3186097261203045542[37] = 0;
   out_3186097261203045542[38] = 0;
   out_3186097261203045542[39] = 0;
   out_3186097261203045542[40] = 0;
   out_3186097261203045542[41] = 0;
   out_3186097261203045542[42] = 0;
   out_3186097261203045542[43] = 0;
   out_3186097261203045542[44] = 1;
   out_3186097261203045542[45] = 0;
   out_3186097261203045542[46] = 0;
   out_3186097261203045542[47] = 0;
   out_3186097261203045542[48] = 0;
   out_3186097261203045542[49] = 0;
   out_3186097261203045542[50] = dt;
   out_3186097261203045542[51] = 0;
   out_3186097261203045542[52] = 0;
   out_3186097261203045542[53] = 0;
   out_3186097261203045542[54] = 0;
   out_3186097261203045542[55] = 0;
   out_3186097261203045542[56] = 0;
   out_3186097261203045542[57] = 0;
   out_3186097261203045542[58] = 0;
   out_3186097261203045542[59] = 0;
   out_3186097261203045542[60] = 0;
   out_3186097261203045542[61] = 0;
   out_3186097261203045542[62] = 0;
   out_3186097261203045542[63] = 0;
   out_3186097261203045542[64] = 0;
   out_3186097261203045542[65] = 0;
   out_3186097261203045542[66] = 1;
   out_3186097261203045542[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3186097261203045542[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3186097261203045542[69] = 0;
   out_3186097261203045542[70] = 0;
   out_3186097261203045542[71] = 0;
   out_3186097261203045542[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3186097261203045542[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3186097261203045542[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3186097261203045542[75] = 0;
   out_3186097261203045542[76] = 0;
   out_3186097261203045542[77] = 0;
   out_3186097261203045542[78] = 0;
   out_3186097261203045542[79] = 0;
   out_3186097261203045542[80] = 0;
   out_3186097261203045542[81] = 0;
   out_3186097261203045542[82] = 0;
   out_3186097261203045542[83] = 0;
   out_3186097261203045542[84] = 0;
   out_3186097261203045542[85] = 0;
   out_3186097261203045542[86] = 0;
   out_3186097261203045542[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3186097261203045542[88] = 1;
   out_3186097261203045542[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3186097261203045542[90] = 0;
   out_3186097261203045542[91] = 0;
   out_3186097261203045542[92] = 0;
   out_3186097261203045542[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3186097261203045542[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3186097261203045542[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3186097261203045542[96] = 0;
   out_3186097261203045542[97] = 0;
   out_3186097261203045542[98] = 0;
   out_3186097261203045542[99] = 0;
   out_3186097261203045542[100] = 0;
   out_3186097261203045542[101] = 0;
   out_3186097261203045542[102] = 0;
   out_3186097261203045542[103] = 0;
   out_3186097261203045542[104] = 0;
   out_3186097261203045542[105] = 0;
   out_3186097261203045542[106] = 0;
   out_3186097261203045542[107] = 0;
   out_3186097261203045542[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3186097261203045542[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3186097261203045542[110] = 1;
   out_3186097261203045542[111] = 0;
   out_3186097261203045542[112] = 0;
   out_3186097261203045542[113] = 0;
   out_3186097261203045542[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3186097261203045542[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3186097261203045542[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3186097261203045542[117] = 0;
   out_3186097261203045542[118] = 0;
   out_3186097261203045542[119] = 0;
   out_3186097261203045542[120] = 0;
   out_3186097261203045542[121] = 0;
   out_3186097261203045542[122] = 0;
   out_3186097261203045542[123] = 0;
   out_3186097261203045542[124] = 0;
   out_3186097261203045542[125] = 0;
   out_3186097261203045542[126] = 0;
   out_3186097261203045542[127] = 0;
   out_3186097261203045542[128] = 0;
   out_3186097261203045542[129] = 0;
   out_3186097261203045542[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3186097261203045542[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3186097261203045542[132] = 1;
   out_3186097261203045542[133] = 0;
   out_3186097261203045542[134] = 0;
   out_3186097261203045542[135] = 0;
   out_3186097261203045542[136] = 0;
   out_3186097261203045542[137] = 0;
   out_3186097261203045542[138] = 0;
   out_3186097261203045542[139] = 0;
   out_3186097261203045542[140] = 0;
   out_3186097261203045542[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3186097261203045542[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3186097261203045542[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3186097261203045542[144] = 0;
   out_3186097261203045542[145] = 0;
   out_3186097261203045542[146] = 0;
   out_3186097261203045542[147] = 0;
   out_3186097261203045542[148] = 0;
   out_3186097261203045542[149] = 0;
   out_3186097261203045542[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3186097261203045542[151] = 0;
   out_3186097261203045542[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3186097261203045542[153] = 0;
   out_3186097261203045542[154] = 1;
   out_3186097261203045542[155] = 0;
   out_3186097261203045542[156] = 0;
   out_3186097261203045542[157] = 0;
   out_3186097261203045542[158] = 0;
   out_3186097261203045542[159] = 0;
   out_3186097261203045542[160] = 0;
   out_3186097261203045542[161] = 0;
   out_3186097261203045542[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3186097261203045542[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3186097261203045542[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3186097261203045542[165] = 0;
   out_3186097261203045542[166] = 0;
   out_3186097261203045542[167] = 0;
   out_3186097261203045542[168] = 0;
   out_3186097261203045542[169] = 0;
   out_3186097261203045542[170] = 0;
   out_3186097261203045542[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3186097261203045542[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3186097261203045542[173] = 0;
   out_3186097261203045542[174] = 0;
   out_3186097261203045542[175] = 0;
   out_3186097261203045542[176] = 1;
   out_3186097261203045542[177] = 0;
   out_3186097261203045542[178] = 0;
   out_3186097261203045542[179] = 0;
   out_3186097261203045542[180] = 0;
   out_3186097261203045542[181] = 0;
   out_3186097261203045542[182] = 0;
   out_3186097261203045542[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3186097261203045542[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3186097261203045542[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3186097261203045542[186] = 0;
   out_3186097261203045542[187] = 0;
   out_3186097261203045542[188] = 0;
   out_3186097261203045542[189] = 0;
   out_3186097261203045542[190] = 0;
   out_3186097261203045542[191] = 0;
   out_3186097261203045542[192] = 0;
   out_3186097261203045542[193] = 0;
   out_3186097261203045542[194] = 0;
   out_3186097261203045542[195] = 0;
   out_3186097261203045542[196] = 0;
   out_3186097261203045542[197] = 0;
   out_3186097261203045542[198] = 1;
   out_3186097261203045542[199] = 0;
   out_3186097261203045542[200] = 0;
   out_3186097261203045542[201] = 0;
   out_3186097261203045542[202] = 0;
   out_3186097261203045542[203] = 0;
   out_3186097261203045542[204] = 0;
   out_3186097261203045542[205] = 0;
   out_3186097261203045542[206] = 0;
   out_3186097261203045542[207] = 0;
   out_3186097261203045542[208] = 0;
   out_3186097261203045542[209] = 0;
   out_3186097261203045542[210] = 0;
   out_3186097261203045542[211] = 0;
   out_3186097261203045542[212] = 0;
   out_3186097261203045542[213] = 0;
   out_3186097261203045542[214] = 0;
   out_3186097261203045542[215] = 0;
   out_3186097261203045542[216] = 0;
   out_3186097261203045542[217] = 0;
   out_3186097261203045542[218] = 0;
   out_3186097261203045542[219] = 0;
   out_3186097261203045542[220] = 1;
   out_3186097261203045542[221] = 0;
   out_3186097261203045542[222] = 0;
   out_3186097261203045542[223] = 0;
   out_3186097261203045542[224] = 0;
   out_3186097261203045542[225] = 0;
   out_3186097261203045542[226] = 0;
   out_3186097261203045542[227] = 0;
   out_3186097261203045542[228] = 0;
   out_3186097261203045542[229] = 0;
   out_3186097261203045542[230] = 0;
   out_3186097261203045542[231] = 0;
   out_3186097261203045542[232] = 0;
   out_3186097261203045542[233] = 0;
   out_3186097261203045542[234] = 0;
   out_3186097261203045542[235] = 0;
   out_3186097261203045542[236] = 0;
   out_3186097261203045542[237] = 0;
   out_3186097261203045542[238] = 0;
   out_3186097261203045542[239] = 0;
   out_3186097261203045542[240] = 0;
   out_3186097261203045542[241] = 0;
   out_3186097261203045542[242] = 1;
   out_3186097261203045542[243] = 0;
   out_3186097261203045542[244] = 0;
   out_3186097261203045542[245] = 0;
   out_3186097261203045542[246] = 0;
   out_3186097261203045542[247] = 0;
   out_3186097261203045542[248] = 0;
   out_3186097261203045542[249] = 0;
   out_3186097261203045542[250] = 0;
   out_3186097261203045542[251] = 0;
   out_3186097261203045542[252] = 0;
   out_3186097261203045542[253] = 0;
   out_3186097261203045542[254] = 0;
   out_3186097261203045542[255] = 0;
   out_3186097261203045542[256] = 0;
   out_3186097261203045542[257] = 0;
   out_3186097261203045542[258] = 0;
   out_3186097261203045542[259] = 0;
   out_3186097261203045542[260] = 0;
   out_3186097261203045542[261] = 0;
   out_3186097261203045542[262] = 0;
   out_3186097261203045542[263] = 0;
   out_3186097261203045542[264] = 1;
   out_3186097261203045542[265] = 0;
   out_3186097261203045542[266] = 0;
   out_3186097261203045542[267] = 0;
   out_3186097261203045542[268] = 0;
   out_3186097261203045542[269] = 0;
   out_3186097261203045542[270] = 0;
   out_3186097261203045542[271] = 0;
   out_3186097261203045542[272] = 0;
   out_3186097261203045542[273] = 0;
   out_3186097261203045542[274] = 0;
   out_3186097261203045542[275] = 0;
   out_3186097261203045542[276] = 0;
   out_3186097261203045542[277] = 0;
   out_3186097261203045542[278] = 0;
   out_3186097261203045542[279] = 0;
   out_3186097261203045542[280] = 0;
   out_3186097261203045542[281] = 0;
   out_3186097261203045542[282] = 0;
   out_3186097261203045542[283] = 0;
   out_3186097261203045542[284] = 0;
   out_3186097261203045542[285] = 0;
   out_3186097261203045542[286] = 1;
   out_3186097261203045542[287] = 0;
   out_3186097261203045542[288] = 0;
   out_3186097261203045542[289] = 0;
   out_3186097261203045542[290] = 0;
   out_3186097261203045542[291] = 0;
   out_3186097261203045542[292] = 0;
   out_3186097261203045542[293] = 0;
   out_3186097261203045542[294] = 0;
   out_3186097261203045542[295] = 0;
   out_3186097261203045542[296] = 0;
   out_3186097261203045542[297] = 0;
   out_3186097261203045542[298] = 0;
   out_3186097261203045542[299] = 0;
   out_3186097261203045542[300] = 0;
   out_3186097261203045542[301] = 0;
   out_3186097261203045542[302] = 0;
   out_3186097261203045542[303] = 0;
   out_3186097261203045542[304] = 0;
   out_3186097261203045542[305] = 0;
   out_3186097261203045542[306] = 0;
   out_3186097261203045542[307] = 0;
   out_3186097261203045542[308] = 1;
   out_3186097261203045542[309] = 0;
   out_3186097261203045542[310] = 0;
   out_3186097261203045542[311] = 0;
   out_3186097261203045542[312] = 0;
   out_3186097261203045542[313] = 0;
   out_3186097261203045542[314] = 0;
   out_3186097261203045542[315] = 0;
   out_3186097261203045542[316] = 0;
   out_3186097261203045542[317] = 0;
   out_3186097261203045542[318] = 0;
   out_3186097261203045542[319] = 0;
   out_3186097261203045542[320] = 0;
   out_3186097261203045542[321] = 0;
   out_3186097261203045542[322] = 0;
   out_3186097261203045542[323] = 0;
   out_3186097261203045542[324] = 0;
   out_3186097261203045542[325] = 0;
   out_3186097261203045542[326] = 0;
   out_3186097261203045542[327] = 0;
   out_3186097261203045542[328] = 0;
   out_3186097261203045542[329] = 0;
   out_3186097261203045542[330] = 1;
   out_3186097261203045542[331] = 0;
   out_3186097261203045542[332] = 0;
   out_3186097261203045542[333] = 0;
   out_3186097261203045542[334] = 0;
   out_3186097261203045542[335] = 0;
   out_3186097261203045542[336] = 0;
   out_3186097261203045542[337] = 0;
   out_3186097261203045542[338] = 0;
   out_3186097261203045542[339] = 0;
   out_3186097261203045542[340] = 0;
   out_3186097261203045542[341] = 0;
   out_3186097261203045542[342] = 0;
   out_3186097261203045542[343] = 0;
   out_3186097261203045542[344] = 0;
   out_3186097261203045542[345] = 0;
   out_3186097261203045542[346] = 0;
   out_3186097261203045542[347] = 0;
   out_3186097261203045542[348] = 0;
   out_3186097261203045542[349] = 0;
   out_3186097261203045542[350] = 0;
   out_3186097261203045542[351] = 0;
   out_3186097261203045542[352] = 1;
   out_3186097261203045542[353] = 0;
   out_3186097261203045542[354] = 0;
   out_3186097261203045542[355] = 0;
   out_3186097261203045542[356] = 0;
   out_3186097261203045542[357] = 0;
   out_3186097261203045542[358] = 0;
   out_3186097261203045542[359] = 0;
   out_3186097261203045542[360] = 0;
   out_3186097261203045542[361] = 0;
   out_3186097261203045542[362] = 0;
   out_3186097261203045542[363] = 0;
   out_3186097261203045542[364] = 0;
   out_3186097261203045542[365] = 0;
   out_3186097261203045542[366] = 0;
   out_3186097261203045542[367] = 0;
   out_3186097261203045542[368] = 0;
   out_3186097261203045542[369] = 0;
   out_3186097261203045542[370] = 0;
   out_3186097261203045542[371] = 0;
   out_3186097261203045542[372] = 0;
   out_3186097261203045542[373] = 0;
   out_3186097261203045542[374] = 1;
   out_3186097261203045542[375] = 0;
   out_3186097261203045542[376] = 0;
   out_3186097261203045542[377] = 0;
   out_3186097261203045542[378] = 0;
   out_3186097261203045542[379] = 0;
   out_3186097261203045542[380] = 0;
   out_3186097261203045542[381] = 0;
   out_3186097261203045542[382] = 0;
   out_3186097261203045542[383] = 0;
   out_3186097261203045542[384] = 0;
   out_3186097261203045542[385] = 0;
   out_3186097261203045542[386] = 0;
   out_3186097261203045542[387] = 0;
   out_3186097261203045542[388] = 0;
   out_3186097261203045542[389] = 0;
   out_3186097261203045542[390] = 0;
   out_3186097261203045542[391] = 0;
   out_3186097261203045542[392] = 0;
   out_3186097261203045542[393] = 0;
   out_3186097261203045542[394] = 0;
   out_3186097261203045542[395] = 0;
   out_3186097261203045542[396] = 1;
   out_3186097261203045542[397] = 0;
   out_3186097261203045542[398] = 0;
   out_3186097261203045542[399] = 0;
   out_3186097261203045542[400] = 0;
   out_3186097261203045542[401] = 0;
   out_3186097261203045542[402] = 0;
   out_3186097261203045542[403] = 0;
   out_3186097261203045542[404] = 0;
   out_3186097261203045542[405] = 0;
   out_3186097261203045542[406] = 0;
   out_3186097261203045542[407] = 0;
   out_3186097261203045542[408] = 0;
   out_3186097261203045542[409] = 0;
   out_3186097261203045542[410] = 0;
   out_3186097261203045542[411] = 0;
   out_3186097261203045542[412] = 0;
   out_3186097261203045542[413] = 0;
   out_3186097261203045542[414] = 0;
   out_3186097261203045542[415] = 0;
   out_3186097261203045542[416] = 0;
   out_3186097261203045542[417] = 0;
   out_3186097261203045542[418] = 1;
   out_3186097261203045542[419] = 0;
   out_3186097261203045542[420] = 0;
   out_3186097261203045542[421] = 0;
   out_3186097261203045542[422] = 0;
   out_3186097261203045542[423] = 0;
   out_3186097261203045542[424] = 0;
   out_3186097261203045542[425] = 0;
   out_3186097261203045542[426] = 0;
   out_3186097261203045542[427] = 0;
   out_3186097261203045542[428] = 0;
   out_3186097261203045542[429] = 0;
   out_3186097261203045542[430] = 0;
   out_3186097261203045542[431] = 0;
   out_3186097261203045542[432] = 0;
   out_3186097261203045542[433] = 0;
   out_3186097261203045542[434] = 0;
   out_3186097261203045542[435] = 0;
   out_3186097261203045542[436] = 0;
   out_3186097261203045542[437] = 0;
   out_3186097261203045542[438] = 0;
   out_3186097261203045542[439] = 0;
   out_3186097261203045542[440] = 1;
}
void h_4(double *state, double *unused, double *out_3741433016266265790) {
   out_3741433016266265790[0] = state[10] + state[13];
   out_3741433016266265790[1] = state[11] + state[14];
   out_3741433016266265790[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4927646824948109699) {
   out_4927646824948109699[0] = 0;
   out_4927646824948109699[1] = 0;
   out_4927646824948109699[2] = 0;
   out_4927646824948109699[3] = 0;
   out_4927646824948109699[4] = 0;
   out_4927646824948109699[5] = 0;
   out_4927646824948109699[6] = 0;
   out_4927646824948109699[7] = 0;
   out_4927646824948109699[8] = 0;
   out_4927646824948109699[9] = 0;
   out_4927646824948109699[10] = 1;
   out_4927646824948109699[11] = 0;
   out_4927646824948109699[12] = 0;
   out_4927646824948109699[13] = 1;
   out_4927646824948109699[14] = 0;
   out_4927646824948109699[15] = 0;
   out_4927646824948109699[16] = 0;
   out_4927646824948109699[17] = 0;
   out_4927646824948109699[18] = 0;
   out_4927646824948109699[19] = 0;
   out_4927646824948109699[20] = 0;
   out_4927646824948109699[21] = 0;
   out_4927646824948109699[22] = 0;
   out_4927646824948109699[23] = 0;
   out_4927646824948109699[24] = 0;
   out_4927646824948109699[25] = 0;
   out_4927646824948109699[26] = 0;
   out_4927646824948109699[27] = 0;
   out_4927646824948109699[28] = 0;
   out_4927646824948109699[29] = 0;
   out_4927646824948109699[30] = 0;
   out_4927646824948109699[31] = 0;
   out_4927646824948109699[32] = 0;
   out_4927646824948109699[33] = 1;
   out_4927646824948109699[34] = 0;
   out_4927646824948109699[35] = 0;
   out_4927646824948109699[36] = 1;
   out_4927646824948109699[37] = 0;
   out_4927646824948109699[38] = 0;
   out_4927646824948109699[39] = 0;
   out_4927646824948109699[40] = 0;
   out_4927646824948109699[41] = 0;
   out_4927646824948109699[42] = 0;
   out_4927646824948109699[43] = 0;
   out_4927646824948109699[44] = 0;
   out_4927646824948109699[45] = 0;
   out_4927646824948109699[46] = 0;
   out_4927646824948109699[47] = 0;
   out_4927646824948109699[48] = 0;
   out_4927646824948109699[49] = 0;
   out_4927646824948109699[50] = 0;
   out_4927646824948109699[51] = 0;
   out_4927646824948109699[52] = 0;
   out_4927646824948109699[53] = 0;
   out_4927646824948109699[54] = 0;
   out_4927646824948109699[55] = 0;
   out_4927646824948109699[56] = 1;
   out_4927646824948109699[57] = 0;
   out_4927646824948109699[58] = 0;
   out_4927646824948109699[59] = 1;
   out_4927646824948109699[60] = 0;
   out_4927646824948109699[61] = 0;
   out_4927646824948109699[62] = 0;
   out_4927646824948109699[63] = 0;
   out_4927646824948109699[64] = 0;
   out_4927646824948109699[65] = 0;
}
void h_9(double *state, double *unused, double *out_7364970975836161989) {
   out_7364970975836161989[0] = state[10];
   out_7364970975836161989[1] = state[11];
   out_7364970975836161989[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6231878313496994447) {
   out_6231878313496994447[0] = 0;
   out_6231878313496994447[1] = 0;
   out_6231878313496994447[2] = 0;
   out_6231878313496994447[3] = 0;
   out_6231878313496994447[4] = 0;
   out_6231878313496994447[5] = 0;
   out_6231878313496994447[6] = 0;
   out_6231878313496994447[7] = 0;
   out_6231878313496994447[8] = 0;
   out_6231878313496994447[9] = 0;
   out_6231878313496994447[10] = 1;
   out_6231878313496994447[11] = 0;
   out_6231878313496994447[12] = 0;
   out_6231878313496994447[13] = 0;
   out_6231878313496994447[14] = 0;
   out_6231878313496994447[15] = 0;
   out_6231878313496994447[16] = 0;
   out_6231878313496994447[17] = 0;
   out_6231878313496994447[18] = 0;
   out_6231878313496994447[19] = 0;
   out_6231878313496994447[20] = 0;
   out_6231878313496994447[21] = 0;
   out_6231878313496994447[22] = 0;
   out_6231878313496994447[23] = 0;
   out_6231878313496994447[24] = 0;
   out_6231878313496994447[25] = 0;
   out_6231878313496994447[26] = 0;
   out_6231878313496994447[27] = 0;
   out_6231878313496994447[28] = 0;
   out_6231878313496994447[29] = 0;
   out_6231878313496994447[30] = 0;
   out_6231878313496994447[31] = 0;
   out_6231878313496994447[32] = 0;
   out_6231878313496994447[33] = 1;
   out_6231878313496994447[34] = 0;
   out_6231878313496994447[35] = 0;
   out_6231878313496994447[36] = 0;
   out_6231878313496994447[37] = 0;
   out_6231878313496994447[38] = 0;
   out_6231878313496994447[39] = 0;
   out_6231878313496994447[40] = 0;
   out_6231878313496994447[41] = 0;
   out_6231878313496994447[42] = 0;
   out_6231878313496994447[43] = 0;
   out_6231878313496994447[44] = 0;
   out_6231878313496994447[45] = 0;
   out_6231878313496994447[46] = 0;
   out_6231878313496994447[47] = 0;
   out_6231878313496994447[48] = 0;
   out_6231878313496994447[49] = 0;
   out_6231878313496994447[50] = 0;
   out_6231878313496994447[51] = 0;
   out_6231878313496994447[52] = 0;
   out_6231878313496994447[53] = 0;
   out_6231878313496994447[54] = 0;
   out_6231878313496994447[55] = 0;
   out_6231878313496994447[56] = 1;
   out_6231878313496994447[57] = 0;
   out_6231878313496994447[58] = 0;
   out_6231878313496994447[59] = 0;
   out_6231878313496994447[60] = 0;
   out_6231878313496994447[61] = 0;
   out_6231878313496994447[62] = 0;
   out_6231878313496994447[63] = 0;
   out_6231878313496994447[64] = 0;
   out_6231878313496994447[65] = 0;
}
void h_10(double *state, double *unused, double *out_9153123907495298524) {
   out_9153123907495298524[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_9153123907495298524[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_9153123907495298524[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8767559551092740561) {
   out_8767559551092740561[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8767559551092740561[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8767559551092740561[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8767559551092740561[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8767559551092740561[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8767559551092740561[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8767559551092740561[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8767559551092740561[7] = 0;
   out_8767559551092740561[8] = 0;
   out_8767559551092740561[9] = 0;
   out_8767559551092740561[10] = 0;
   out_8767559551092740561[11] = 0;
   out_8767559551092740561[12] = 0;
   out_8767559551092740561[13] = 0;
   out_8767559551092740561[14] = 0;
   out_8767559551092740561[15] = 0;
   out_8767559551092740561[16] = 1;
   out_8767559551092740561[17] = 0;
   out_8767559551092740561[18] = 0;
   out_8767559551092740561[19] = 1;
   out_8767559551092740561[20] = 0;
   out_8767559551092740561[21] = 0;
   out_8767559551092740561[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8767559551092740561[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8767559551092740561[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8767559551092740561[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8767559551092740561[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8767559551092740561[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8767559551092740561[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8767559551092740561[29] = 0;
   out_8767559551092740561[30] = 0;
   out_8767559551092740561[31] = 0;
   out_8767559551092740561[32] = 0;
   out_8767559551092740561[33] = 0;
   out_8767559551092740561[34] = 0;
   out_8767559551092740561[35] = 0;
   out_8767559551092740561[36] = 0;
   out_8767559551092740561[37] = 0;
   out_8767559551092740561[38] = 0;
   out_8767559551092740561[39] = 1;
   out_8767559551092740561[40] = 0;
   out_8767559551092740561[41] = 0;
   out_8767559551092740561[42] = 1;
   out_8767559551092740561[43] = 0;
   out_8767559551092740561[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8767559551092740561[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8767559551092740561[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8767559551092740561[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8767559551092740561[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8767559551092740561[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8767559551092740561[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8767559551092740561[51] = 0;
   out_8767559551092740561[52] = 0;
   out_8767559551092740561[53] = 0;
   out_8767559551092740561[54] = 0;
   out_8767559551092740561[55] = 0;
   out_8767559551092740561[56] = 0;
   out_8767559551092740561[57] = 0;
   out_8767559551092740561[58] = 0;
   out_8767559551092740561[59] = 0;
   out_8767559551092740561[60] = 0;
   out_8767559551092740561[61] = 0;
   out_8767559551092740561[62] = 1;
   out_8767559551092740561[63] = 0;
   out_8767559551092740561[64] = 0;
   out_8767559551092740561[65] = 1;
}
void h_12(double *state, double *unused, double *out_8102472017355129809) {
   out_8102472017355129809[0] = state[0];
   out_8102472017355129809[1] = state[1];
   out_8102472017355129809[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8499640840729480122) {
   out_8499640840729480122[0] = 1;
   out_8499640840729480122[1] = 0;
   out_8499640840729480122[2] = 0;
   out_8499640840729480122[3] = 0;
   out_8499640840729480122[4] = 0;
   out_8499640840729480122[5] = 0;
   out_8499640840729480122[6] = 0;
   out_8499640840729480122[7] = 0;
   out_8499640840729480122[8] = 0;
   out_8499640840729480122[9] = 0;
   out_8499640840729480122[10] = 0;
   out_8499640840729480122[11] = 0;
   out_8499640840729480122[12] = 0;
   out_8499640840729480122[13] = 0;
   out_8499640840729480122[14] = 0;
   out_8499640840729480122[15] = 0;
   out_8499640840729480122[16] = 0;
   out_8499640840729480122[17] = 0;
   out_8499640840729480122[18] = 0;
   out_8499640840729480122[19] = 0;
   out_8499640840729480122[20] = 0;
   out_8499640840729480122[21] = 0;
   out_8499640840729480122[22] = 0;
   out_8499640840729480122[23] = 1;
   out_8499640840729480122[24] = 0;
   out_8499640840729480122[25] = 0;
   out_8499640840729480122[26] = 0;
   out_8499640840729480122[27] = 0;
   out_8499640840729480122[28] = 0;
   out_8499640840729480122[29] = 0;
   out_8499640840729480122[30] = 0;
   out_8499640840729480122[31] = 0;
   out_8499640840729480122[32] = 0;
   out_8499640840729480122[33] = 0;
   out_8499640840729480122[34] = 0;
   out_8499640840729480122[35] = 0;
   out_8499640840729480122[36] = 0;
   out_8499640840729480122[37] = 0;
   out_8499640840729480122[38] = 0;
   out_8499640840729480122[39] = 0;
   out_8499640840729480122[40] = 0;
   out_8499640840729480122[41] = 0;
   out_8499640840729480122[42] = 0;
   out_8499640840729480122[43] = 0;
   out_8499640840729480122[44] = 0;
   out_8499640840729480122[45] = 0;
   out_8499640840729480122[46] = 1;
   out_8499640840729480122[47] = 0;
   out_8499640840729480122[48] = 0;
   out_8499640840729480122[49] = 0;
   out_8499640840729480122[50] = 0;
   out_8499640840729480122[51] = 0;
   out_8499640840729480122[52] = 0;
   out_8499640840729480122[53] = 0;
   out_8499640840729480122[54] = 0;
   out_8499640840729480122[55] = 0;
   out_8499640840729480122[56] = 0;
   out_8499640840729480122[57] = 0;
   out_8499640840729480122[58] = 0;
   out_8499640840729480122[59] = 0;
   out_8499640840729480122[60] = 0;
   out_8499640840729480122[61] = 0;
   out_8499640840729480122[62] = 0;
   out_8499640840729480122[63] = 0;
   out_8499640840729480122[64] = 0;
   out_8499640840729480122[65] = 0;
}
void h_35(double *state, double *unused, double *out_433905105053925015) {
   out_433905105053925015[0] = state[7];
   out_433905105053925015[1] = state[8];
   out_433905105053925015[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5754077808404466413) {
   out_5754077808404466413[0] = 0;
   out_5754077808404466413[1] = 0;
   out_5754077808404466413[2] = 0;
   out_5754077808404466413[3] = 0;
   out_5754077808404466413[4] = 0;
   out_5754077808404466413[5] = 0;
   out_5754077808404466413[6] = 0;
   out_5754077808404466413[7] = 1;
   out_5754077808404466413[8] = 0;
   out_5754077808404466413[9] = 0;
   out_5754077808404466413[10] = 0;
   out_5754077808404466413[11] = 0;
   out_5754077808404466413[12] = 0;
   out_5754077808404466413[13] = 0;
   out_5754077808404466413[14] = 0;
   out_5754077808404466413[15] = 0;
   out_5754077808404466413[16] = 0;
   out_5754077808404466413[17] = 0;
   out_5754077808404466413[18] = 0;
   out_5754077808404466413[19] = 0;
   out_5754077808404466413[20] = 0;
   out_5754077808404466413[21] = 0;
   out_5754077808404466413[22] = 0;
   out_5754077808404466413[23] = 0;
   out_5754077808404466413[24] = 0;
   out_5754077808404466413[25] = 0;
   out_5754077808404466413[26] = 0;
   out_5754077808404466413[27] = 0;
   out_5754077808404466413[28] = 0;
   out_5754077808404466413[29] = 0;
   out_5754077808404466413[30] = 1;
   out_5754077808404466413[31] = 0;
   out_5754077808404466413[32] = 0;
   out_5754077808404466413[33] = 0;
   out_5754077808404466413[34] = 0;
   out_5754077808404466413[35] = 0;
   out_5754077808404466413[36] = 0;
   out_5754077808404466413[37] = 0;
   out_5754077808404466413[38] = 0;
   out_5754077808404466413[39] = 0;
   out_5754077808404466413[40] = 0;
   out_5754077808404466413[41] = 0;
   out_5754077808404466413[42] = 0;
   out_5754077808404466413[43] = 0;
   out_5754077808404466413[44] = 0;
   out_5754077808404466413[45] = 0;
   out_5754077808404466413[46] = 0;
   out_5754077808404466413[47] = 0;
   out_5754077808404466413[48] = 0;
   out_5754077808404466413[49] = 0;
   out_5754077808404466413[50] = 0;
   out_5754077808404466413[51] = 0;
   out_5754077808404466413[52] = 0;
   out_5754077808404466413[53] = 1;
   out_5754077808404466413[54] = 0;
   out_5754077808404466413[55] = 0;
   out_5754077808404466413[56] = 0;
   out_5754077808404466413[57] = 0;
   out_5754077808404466413[58] = 0;
   out_5754077808404466413[59] = 0;
   out_5754077808404466413[60] = 0;
   out_5754077808404466413[61] = 0;
   out_5754077808404466413[62] = 0;
   out_5754077808404466413[63] = 0;
   out_5754077808404466413[64] = 0;
   out_5754077808404466413[65] = 0;
}
void h_32(double *state, double *unused, double *out_4348016203939680581) {
   out_4348016203939680581[0] = state[3];
   out_4348016203939680581[1] = state[4];
   out_4348016203939680581[2] = state[5];
   out_4348016203939680581[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6649469372609817473) {
   out_6649469372609817473[0] = 0;
   out_6649469372609817473[1] = 0;
   out_6649469372609817473[2] = 0;
   out_6649469372609817473[3] = 1;
   out_6649469372609817473[4] = 0;
   out_6649469372609817473[5] = 0;
   out_6649469372609817473[6] = 0;
   out_6649469372609817473[7] = 0;
   out_6649469372609817473[8] = 0;
   out_6649469372609817473[9] = 0;
   out_6649469372609817473[10] = 0;
   out_6649469372609817473[11] = 0;
   out_6649469372609817473[12] = 0;
   out_6649469372609817473[13] = 0;
   out_6649469372609817473[14] = 0;
   out_6649469372609817473[15] = 0;
   out_6649469372609817473[16] = 0;
   out_6649469372609817473[17] = 0;
   out_6649469372609817473[18] = 0;
   out_6649469372609817473[19] = 0;
   out_6649469372609817473[20] = 0;
   out_6649469372609817473[21] = 0;
   out_6649469372609817473[22] = 0;
   out_6649469372609817473[23] = 0;
   out_6649469372609817473[24] = 0;
   out_6649469372609817473[25] = 0;
   out_6649469372609817473[26] = 1;
   out_6649469372609817473[27] = 0;
   out_6649469372609817473[28] = 0;
   out_6649469372609817473[29] = 0;
   out_6649469372609817473[30] = 0;
   out_6649469372609817473[31] = 0;
   out_6649469372609817473[32] = 0;
   out_6649469372609817473[33] = 0;
   out_6649469372609817473[34] = 0;
   out_6649469372609817473[35] = 0;
   out_6649469372609817473[36] = 0;
   out_6649469372609817473[37] = 0;
   out_6649469372609817473[38] = 0;
   out_6649469372609817473[39] = 0;
   out_6649469372609817473[40] = 0;
   out_6649469372609817473[41] = 0;
   out_6649469372609817473[42] = 0;
   out_6649469372609817473[43] = 0;
   out_6649469372609817473[44] = 0;
   out_6649469372609817473[45] = 0;
   out_6649469372609817473[46] = 0;
   out_6649469372609817473[47] = 0;
   out_6649469372609817473[48] = 0;
   out_6649469372609817473[49] = 1;
   out_6649469372609817473[50] = 0;
   out_6649469372609817473[51] = 0;
   out_6649469372609817473[52] = 0;
   out_6649469372609817473[53] = 0;
   out_6649469372609817473[54] = 0;
   out_6649469372609817473[55] = 0;
   out_6649469372609817473[56] = 0;
   out_6649469372609817473[57] = 0;
   out_6649469372609817473[58] = 0;
   out_6649469372609817473[59] = 0;
   out_6649469372609817473[60] = 0;
   out_6649469372609817473[61] = 0;
   out_6649469372609817473[62] = 0;
   out_6649469372609817473[63] = 0;
   out_6649469372609817473[64] = 0;
   out_6649469372609817473[65] = 0;
   out_6649469372609817473[66] = 0;
   out_6649469372609817473[67] = 0;
   out_6649469372609817473[68] = 0;
   out_6649469372609817473[69] = 0;
   out_6649469372609817473[70] = 0;
   out_6649469372609817473[71] = 0;
   out_6649469372609817473[72] = 1;
   out_6649469372609817473[73] = 0;
   out_6649469372609817473[74] = 0;
   out_6649469372609817473[75] = 0;
   out_6649469372609817473[76] = 0;
   out_6649469372609817473[77] = 0;
   out_6649469372609817473[78] = 0;
   out_6649469372609817473[79] = 0;
   out_6649469372609817473[80] = 0;
   out_6649469372609817473[81] = 0;
   out_6649469372609817473[82] = 0;
   out_6649469372609817473[83] = 0;
   out_6649469372609817473[84] = 0;
   out_6649469372609817473[85] = 0;
   out_6649469372609817473[86] = 0;
   out_6649469372609817473[87] = 0;
}
void h_13(double *state, double *unused, double *out_3451902710495857632) {
   out_3451902710495857632[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3451902710495857632[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3451902710495857632[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4622448620766405792) {
   out_4622448620766405792[0] = 0;
   out_4622448620766405792[1] = 0;
   out_4622448620766405792[2] = 0;
   out_4622448620766405792[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4622448620766405792[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4622448620766405792[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4622448620766405792[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4622448620766405792[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4622448620766405792[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4622448620766405792[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4622448620766405792[10] = 0;
   out_4622448620766405792[11] = 0;
   out_4622448620766405792[12] = 0;
   out_4622448620766405792[13] = 0;
   out_4622448620766405792[14] = 0;
   out_4622448620766405792[15] = 0;
   out_4622448620766405792[16] = 0;
   out_4622448620766405792[17] = 0;
   out_4622448620766405792[18] = 0;
   out_4622448620766405792[19] = 0;
   out_4622448620766405792[20] = 0;
   out_4622448620766405792[21] = 0;
   out_4622448620766405792[22] = 0;
   out_4622448620766405792[23] = 0;
   out_4622448620766405792[24] = 0;
   out_4622448620766405792[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4622448620766405792[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4622448620766405792[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4622448620766405792[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4622448620766405792[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4622448620766405792[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4622448620766405792[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4622448620766405792[32] = 0;
   out_4622448620766405792[33] = 0;
   out_4622448620766405792[34] = 0;
   out_4622448620766405792[35] = 0;
   out_4622448620766405792[36] = 0;
   out_4622448620766405792[37] = 0;
   out_4622448620766405792[38] = 0;
   out_4622448620766405792[39] = 0;
   out_4622448620766405792[40] = 0;
   out_4622448620766405792[41] = 0;
   out_4622448620766405792[42] = 0;
   out_4622448620766405792[43] = 0;
   out_4622448620766405792[44] = 0;
   out_4622448620766405792[45] = 0;
   out_4622448620766405792[46] = 0;
   out_4622448620766405792[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4622448620766405792[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4622448620766405792[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4622448620766405792[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4622448620766405792[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4622448620766405792[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4622448620766405792[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4622448620766405792[54] = 0;
   out_4622448620766405792[55] = 0;
   out_4622448620766405792[56] = 0;
   out_4622448620766405792[57] = 0;
   out_4622448620766405792[58] = 0;
   out_4622448620766405792[59] = 0;
   out_4622448620766405792[60] = 0;
   out_4622448620766405792[61] = 0;
   out_4622448620766405792[62] = 0;
   out_4622448620766405792[63] = 0;
   out_4622448620766405792[64] = 0;
   out_4622448620766405792[65] = 0;
}
void h_14(double *state, double *unused, double *out_7364970975836161989) {
   out_7364970975836161989[0] = state[10];
   out_7364970975836161989[1] = state[11];
   out_7364970975836161989[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6231878313496994447) {
   out_6231878313496994447[0] = 0;
   out_6231878313496994447[1] = 0;
   out_6231878313496994447[2] = 0;
   out_6231878313496994447[3] = 0;
   out_6231878313496994447[4] = 0;
   out_6231878313496994447[5] = 0;
   out_6231878313496994447[6] = 0;
   out_6231878313496994447[7] = 0;
   out_6231878313496994447[8] = 0;
   out_6231878313496994447[9] = 0;
   out_6231878313496994447[10] = 1;
   out_6231878313496994447[11] = 0;
   out_6231878313496994447[12] = 0;
   out_6231878313496994447[13] = 0;
   out_6231878313496994447[14] = 0;
   out_6231878313496994447[15] = 0;
   out_6231878313496994447[16] = 0;
   out_6231878313496994447[17] = 0;
   out_6231878313496994447[18] = 0;
   out_6231878313496994447[19] = 0;
   out_6231878313496994447[20] = 0;
   out_6231878313496994447[21] = 0;
   out_6231878313496994447[22] = 0;
   out_6231878313496994447[23] = 0;
   out_6231878313496994447[24] = 0;
   out_6231878313496994447[25] = 0;
   out_6231878313496994447[26] = 0;
   out_6231878313496994447[27] = 0;
   out_6231878313496994447[28] = 0;
   out_6231878313496994447[29] = 0;
   out_6231878313496994447[30] = 0;
   out_6231878313496994447[31] = 0;
   out_6231878313496994447[32] = 0;
   out_6231878313496994447[33] = 1;
   out_6231878313496994447[34] = 0;
   out_6231878313496994447[35] = 0;
   out_6231878313496994447[36] = 0;
   out_6231878313496994447[37] = 0;
   out_6231878313496994447[38] = 0;
   out_6231878313496994447[39] = 0;
   out_6231878313496994447[40] = 0;
   out_6231878313496994447[41] = 0;
   out_6231878313496994447[42] = 0;
   out_6231878313496994447[43] = 0;
   out_6231878313496994447[44] = 0;
   out_6231878313496994447[45] = 0;
   out_6231878313496994447[46] = 0;
   out_6231878313496994447[47] = 0;
   out_6231878313496994447[48] = 0;
   out_6231878313496994447[49] = 0;
   out_6231878313496994447[50] = 0;
   out_6231878313496994447[51] = 0;
   out_6231878313496994447[52] = 0;
   out_6231878313496994447[53] = 0;
   out_6231878313496994447[54] = 0;
   out_6231878313496994447[55] = 0;
   out_6231878313496994447[56] = 1;
   out_6231878313496994447[57] = 0;
   out_6231878313496994447[58] = 0;
   out_6231878313496994447[59] = 0;
   out_6231878313496994447[60] = 0;
   out_6231878313496994447[61] = 0;
   out_6231878313496994447[62] = 0;
   out_6231878313496994447[63] = 0;
   out_6231878313496994447[64] = 0;
   out_6231878313496994447[65] = 0;
}
void h_33(double *state, double *unused, double *out_5274559196970878082) {
   out_5274559196970878082[0] = state[16];
   out_5274559196970878082[1] = state[17];
   out_5274559196970878082[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7001878186749976937) {
   out_7001878186749976937[0] = 0;
   out_7001878186749976937[1] = 0;
   out_7001878186749976937[2] = 0;
   out_7001878186749976937[3] = 0;
   out_7001878186749976937[4] = 0;
   out_7001878186749976937[5] = 0;
   out_7001878186749976937[6] = 0;
   out_7001878186749976937[7] = 0;
   out_7001878186749976937[8] = 0;
   out_7001878186749976937[9] = 0;
   out_7001878186749976937[10] = 0;
   out_7001878186749976937[11] = 0;
   out_7001878186749976937[12] = 0;
   out_7001878186749976937[13] = 0;
   out_7001878186749976937[14] = 0;
   out_7001878186749976937[15] = 0;
   out_7001878186749976937[16] = 1;
   out_7001878186749976937[17] = 0;
   out_7001878186749976937[18] = 0;
   out_7001878186749976937[19] = 0;
   out_7001878186749976937[20] = 0;
   out_7001878186749976937[21] = 0;
   out_7001878186749976937[22] = 0;
   out_7001878186749976937[23] = 0;
   out_7001878186749976937[24] = 0;
   out_7001878186749976937[25] = 0;
   out_7001878186749976937[26] = 0;
   out_7001878186749976937[27] = 0;
   out_7001878186749976937[28] = 0;
   out_7001878186749976937[29] = 0;
   out_7001878186749976937[30] = 0;
   out_7001878186749976937[31] = 0;
   out_7001878186749976937[32] = 0;
   out_7001878186749976937[33] = 0;
   out_7001878186749976937[34] = 0;
   out_7001878186749976937[35] = 0;
   out_7001878186749976937[36] = 0;
   out_7001878186749976937[37] = 0;
   out_7001878186749976937[38] = 0;
   out_7001878186749976937[39] = 1;
   out_7001878186749976937[40] = 0;
   out_7001878186749976937[41] = 0;
   out_7001878186749976937[42] = 0;
   out_7001878186749976937[43] = 0;
   out_7001878186749976937[44] = 0;
   out_7001878186749976937[45] = 0;
   out_7001878186749976937[46] = 0;
   out_7001878186749976937[47] = 0;
   out_7001878186749976937[48] = 0;
   out_7001878186749976937[49] = 0;
   out_7001878186749976937[50] = 0;
   out_7001878186749976937[51] = 0;
   out_7001878186749976937[52] = 0;
   out_7001878186749976937[53] = 0;
   out_7001878186749976937[54] = 0;
   out_7001878186749976937[55] = 0;
   out_7001878186749976937[56] = 0;
   out_7001878186749976937[57] = 0;
   out_7001878186749976937[58] = 0;
   out_7001878186749976937[59] = 0;
   out_7001878186749976937[60] = 0;
   out_7001878186749976937[61] = 0;
   out_7001878186749976937[62] = 1;
   out_7001878186749976937[63] = 0;
   out_7001878186749976937[64] = 0;
   out_7001878186749976937[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2546835685487147799) {
  H(in_vec, out_2546835685487147799);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4651754224975951828) {
  err_fun(nom_x, delta_x, out_4651754224975951828);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3920038101129836321) {
  inv_err_fun(nom_x, true_x, out_3920038101129836321);
}
void live_H_mod_fun(double *state, double *out_4198656240219355807) {
  H_mod_fun(state, out_4198656240219355807);
}
void live_f_fun(double *state, double dt, double *out_5080123020625053129) {
  f_fun(state,  dt, out_5080123020625053129);
}
void live_F_fun(double *state, double dt, double *out_3186097261203045542) {
  F_fun(state,  dt, out_3186097261203045542);
}
void live_h_4(double *state, double *unused, double *out_3741433016266265790) {
  h_4(state, unused, out_3741433016266265790);
}
void live_H_4(double *state, double *unused, double *out_4927646824948109699) {
  H_4(state, unused, out_4927646824948109699);
}
void live_h_9(double *state, double *unused, double *out_7364970975836161989) {
  h_9(state, unused, out_7364970975836161989);
}
void live_H_9(double *state, double *unused, double *out_6231878313496994447) {
  H_9(state, unused, out_6231878313496994447);
}
void live_h_10(double *state, double *unused, double *out_9153123907495298524) {
  h_10(state, unused, out_9153123907495298524);
}
void live_H_10(double *state, double *unused, double *out_8767559551092740561) {
  H_10(state, unused, out_8767559551092740561);
}
void live_h_12(double *state, double *unused, double *out_8102472017355129809) {
  h_12(state, unused, out_8102472017355129809);
}
void live_H_12(double *state, double *unused, double *out_8499640840729480122) {
  H_12(state, unused, out_8499640840729480122);
}
void live_h_35(double *state, double *unused, double *out_433905105053925015) {
  h_35(state, unused, out_433905105053925015);
}
void live_H_35(double *state, double *unused, double *out_5754077808404466413) {
  H_35(state, unused, out_5754077808404466413);
}
void live_h_32(double *state, double *unused, double *out_4348016203939680581) {
  h_32(state, unused, out_4348016203939680581);
}
void live_H_32(double *state, double *unused, double *out_6649469372609817473) {
  H_32(state, unused, out_6649469372609817473);
}
void live_h_13(double *state, double *unused, double *out_3451902710495857632) {
  h_13(state, unused, out_3451902710495857632);
}
void live_H_13(double *state, double *unused, double *out_4622448620766405792) {
  H_13(state, unused, out_4622448620766405792);
}
void live_h_14(double *state, double *unused, double *out_7364970975836161989) {
  h_14(state, unused, out_7364970975836161989);
}
void live_H_14(double *state, double *unused, double *out_6231878313496994447) {
  H_14(state, unused, out_6231878313496994447);
}
void live_h_33(double *state, double *unused, double *out_5274559196970878082) {
  h_33(state, unused, out_5274559196970878082);
}
void live_H_33(double *state, double *unused, double *out_7001878186749976937) {
  H_33(state, unused, out_7001878186749976937);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
