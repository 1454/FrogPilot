#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3201977696260257895) {
   out_3201977696260257895[0] = 0;
   out_3201977696260257895[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3201977696260257895[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3201977696260257895[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3201977696260257895[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3201977696260257895[5] = -sin(in_vec[1]);
   out_3201977696260257895[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3201977696260257895[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3201977696260257895[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3201977696260257895[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3201977696260257895[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3201977696260257895[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3201977696260257895[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3201977696260257895[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3201977696260257895[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3201977696260257895[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3201977696260257895[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3201977696260257895[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_997666715504881949) {
   out_997666715504881949[0] = delta_x[0] + nom_x[0];
   out_997666715504881949[1] = delta_x[1] + nom_x[1];
   out_997666715504881949[2] = delta_x[2] + nom_x[2];
   out_997666715504881949[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_997666715504881949[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_997666715504881949[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_997666715504881949[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_997666715504881949[7] = delta_x[6] + nom_x[7];
   out_997666715504881949[8] = delta_x[7] + nom_x[8];
   out_997666715504881949[9] = delta_x[8] + nom_x[9];
   out_997666715504881949[10] = delta_x[9] + nom_x[10];
   out_997666715504881949[11] = delta_x[10] + nom_x[11];
   out_997666715504881949[12] = delta_x[11] + nom_x[12];
   out_997666715504881949[13] = delta_x[12] + nom_x[13];
   out_997666715504881949[14] = delta_x[13] + nom_x[14];
   out_997666715504881949[15] = delta_x[14] + nom_x[15];
   out_997666715504881949[16] = delta_x[15] + nom_x[16];
   out_997666715504881949[17] = delta_x[16] + nom_x[17];
   out_997666715504881949[18] = delta_x[17] + nom_x[18];
   out_997666715504881949[19] = delta_x[18] + nom_x[19];
   out_997666715504881949[20] = delta_x[19] + nom_x[20];
   out_997666715504881949[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1105659959287770713) {
   out_1105659959287770713[0] = -nom_x[0] + true_x[0];
   out_1105659959287770713[1] = -nom_x[1] + true_x[1];
   out_1105659959287770713[2] = -nom_x[2] + true_x[2];
   out_1105659959287770713[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1105659959287770713[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1105659959287770713[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1105659959287770713[6] = -nom_x[7] + true_x[7];
   out_1105659959287770713[7] = -nom_x[8] + true_x[8];
   out_1105659959287770713[8] = -nom_x[9] + true_x[9];
   out_1105659959287770713[9] = -nom_x[10] + true_x[10];
   out_1105659959287770713[10] = -nom_x[11] + true_x[11];
   out_1105659959287770713[11] = -nom_x[12] + true_x[12];
   out_1105659959287770713[12] = -nom_x[13] + true_x[13];
   out_1105659959287770713[13] = -nom_x[14] + true_x[14];
   out_1105659959287770713[14] = -nom_x[15] + true_x[15];
   out_1105659959287770713[15] = -nom_x[16] + true_x[16];
   out_1105659959287770713[16] = -nom_x[17] + true_x[17];
   out_1105659959287770713[17] = -nom_x[18] + true_x[18];
   out_1105659959287770713[18] = -nom_x[19] + true_x[19];
   out_1105659959287770713[19] = -nom_x[20] + true_x[20];
   out_1105659959287770713[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3225137284270052937) {
   out_3225137284270052937[0] = 1.0;
   out_3225137284270052937[1] = 0;
   out_3225137284270052937[2] = 0;
   out_3225137284270052937[3] = 0;
   out_3225137284270052937[4] = 0;
   out_3225137284270052937[5] = 0;
   out_3225137284270052937[6] = 0;
   out_3225137284270052937[7] = 0;
   out_3225137284270052937[8] = 0;
   out_3225137284270052937[9] = 0;
   out_3225137284270052937[10] = 0;
   out_3225137284270052937[11] = 0;
   out_3225137284270052937[12] = 0;
   out_3225137284270052937[13] = 0;
   out_3225137284270052937[14] = 0;
   out_3225137284270052937[15] = 0;
   out_3225137284270052937[16] = 0;
   out_3225137284270052937[17] = 0;
   out_3225137284270052937[18] = 0;
   out_3225137284270052937[19] = 0;
   out_3225137284270052937[20] = 0;
   out_3225137284270052937[21] = 0;
   out_3225137284270052937[22] = 1.0;
   out_3225137284270052937[23] = 0;
   out_3225137284270052937[24] = 0;
   out_3225137284270052937[25] = 0;
   out_3225137284270052937[26] = 0;
   out_3225137284270052937[27] = 0;
   out_3225137284270052937[28] = 0;
   out_3225137284270052937[29] = 0;
   out_3225137284270052937[30] = 0;
   out_3225137284270052937[31] = 0;
   out_3225137284270052937[32] = 0;
   out_3225137284270052937[33] = 0;
   out_3225137284270052937[34] = 0;
   out_3225137284270052937[35] = 0;
   out_3225137284270052937[36] = 0;
   out_3225137284270052937[37] = 0;
   out_3225137284270052937[38] = 0;
   out_3225137284270052937[39] = 0;
   out_3225137284270052937[40] = 0;
   out_3225137284270052937[41] = 0;
   out_3225137284270052937[42] = 0;
   out_3225137284270052937[43] = 0;
   out_3225137284270052937[44] = 1.0;
   out_3225137284270052937[45] = 0;
   out_3225137284270052937[46] = 0;
   out_3225137284270052937[47] = 0;
   out_3225137284270052937[48] = 0;
   out_3225137284270052937[49] = 0;
   out_3225137284270052937[50] = 0;
   out_3225137284270052937[51] = 0;
   out_3225137284270052937[52] = 0;
   out_3225137284270052937[53] = 0;
   out_3225137284270052937[54] = 0;
   out_3225137284270052937[55] = 0;
   out_3225137284270052937[56] = 0;
   out_3225137284270052937[57] = 0;
   out_3225137284270052937[58] = 0;
   out_3225137284270052937[59] = 0;
   out_3225137284270052937[60] = 0;
   out_3225137284270052937[61] = 0;
   out_3225137284270052937[62] = 0;
   out_3225137284270052937[63] = 0;
   out_3225137284270052937[64] = 0;
   out_3225137284270052937[65] = 0;
   out_3225137284270052937[66] = -0.5*state[4];
   out_3225137284270052937[67] = -0.5*state[5];
   out_3225137284270052937[68] = -0.5*state[6];
   out_3225137284270052937[69] = 0;
   out_3225137284270052937[70] = 0;
   out_3225137284270052937[71] = 0;
   out_3225137284270052937[72] = 0;
   out_3225137284270052937[73] = 0;
   out_3225137284270052937[74] = 0;
   out_3225137284270052937[75] = 0;
   out_3225137284270052937[76] = 0;
   out_3225137284270052937[77] = 0;
   out_3225137284270052937[78] = 0;
   out_3225137284270052937[79] = 0;
   out_3225137284270052937[80] = 0;
   out_3225137284270052937[81] = 0;
   out_3225137284270052937[82] = 0;
   out_3225137284270052937[83] = 0;
   out_3225137284270052937[84] = 0;
   out_3225137284270052937[85] = 0;
   out_3225137284270052937[86] = 0;
   out_3225137284270052937[87] = 0.5*state[3];
   out_3225137284270052937[88] = 0.5*state[6];
   out_3225137284270052937[89] = -0.5*state[5];
   out_3225137284270052937[90] = 0;
   out_3225137284270052937[91] = 0;
   out_3225137284270052937[92] = 0;
   out_3225137284270052937[93] = 0;
   out_3225137284270052937[94] = 0;
   out_3225137284270052937[95] = 0;
   out_3225137284270052937[96] = 0;
   out_3225137284270052937[97] = 0;
   out_3225137284270052937[98] = 0;
   out_3225137284270052937[99] = 0;
   out_3225137284270052937[100] = 0;
   out_3225137284270052937[101] = 0;
   out_3225137284270052937[102] = 0;
   out_3225137284270052937[103] = 0;
   out_3225137284270052937[104] = 0;
   out_3225137284270052937[105] = 0;
   out_3225137284270052937[106] = 0;
   out_3225137284270052937[107] = 0;
   out_3225137284270052937[108] = -0.5*state[6];
   out_3225137284270052937[109] = 0.5*state[3];
   out_3225137284270052937[110] = 0.5*state[4];
   out_3225137284270052937[111] = 0;
   out_3225137284270052937[112] = 0;
   out_3225137284270052937[113] = 0;
   out_3225137284270052937[114] = 0;
   out_3225137284270052937[115] = 0;
   out_3225137284270052937[116] = 0;
   out_3225137284270052937[117] = 0;
   out_3225137284270052937[118] = 0;
   out_3225137284270052937[119] = 0;
   out_3225137284270052937[120] = 0;
   out_3225137284270052937[121] = 0;
   out_3225137284270052937[122] = 0;
   out_3225137284270052937[123] = 0;
   out_3225137284270052937[124] = 0;
   out_3225137284270052937[125] = 0;
   out_3225137284270052937[126] = 0;
   out_3225137284270052937[127] = 0;
   out_3225137284270052937[128] = 0;
   out_3225137284270052937[129] = 0.5*state[5];
   out_3225137284270052937[130] = -0.5*state[4];
   out_3225137284270052937[131] = 0.5*state[3];
   out_3225137284270052937[132] = 0;
   out_3225137284270052937[133] = 0;
   out_3225137284270052937[134] = 0;
   out_3225137284270052937[135] = 0;
   out_3225137284270052937[136] = 0;
   out_3225137284270052937[137] = 0;
   out_3225137284270052937[138] = 0;
   out_3225137284270052937[139] = 0;
   out_3225137284270052937[140] = 0;
   out_3225137284270052937[141] = 0;
   out_3225137284270052937[142] = 0;
   out_3225137284270052937[143] = 0;
   out_3225137284270052937[144] = 0;
   out_3225137284270052937[145] = 0;
   out_3225137284270052937[146] = 0;
   out_3225137284270052937[147] = 0;
   out_3225137284270052937[148] = 0;
   out_3225137284270052937[149] = 0;
   out_3225137284270052937[150] = 0;
   out_3225137284270052937[151] = 0;
   out_3225137284270052937[152] = 0;
   out_3225137284270052937[153] = 1.0;
   out_3225137284270052937[154] = 0;
   out_3225137284270052937[155] = 0;
   out_3225137284270052937[156] = 0;
   out_3225137284270052937[157] = 0;
   out_3225137284270052937[158] = 0;
   out_3225137284270052937[159] = 0;
   out_3225137284270052937[160] = 0;
   out_3225137284270052937[161] = 0;
   out_3225137284270052937[162] = 0;
   out_3225137284270052937[163] = 0;
   out_3225137284270052937[164] = 0;
   out_3225137284270052937[165] = 0;
   out_3225137284270052937[166] = 0;
   out_3225137284270052937[167] = 0;
   out_3225137284270052937[168] = 0;
   out_3225137284270052937[169] = 0;
   out_3225137284270052937[170] = 0;
   out_3225137284270052937[171] = 0;
   out_3225137284270052937[172] = 0;
   out_3225137284270052937[173] = 0;
   out_3225137284270052937[174] = 0;
   out_3225137284270052937[175] = 1.0;
   out_3225137284270052937[176] = 0;
   out_3225137284270052937[177] = 0;
   out_3225137284270052937[178] = 0;
   out_3225137284270052937[179] = 0;
   out_3225137284270052937[180] = 0;
   out_3225137284270052937[181] = 0;
   out_3225137284270052937[182] = 0;
   out_3225137284270052937[183] = 0;
   out_3225137284270052937[184] = 0;
   out_3225137284270052937[185] = 0;
   out_3225137284270052937[186] = 0;
   out_3225137284270052937[187] = 0;
   out_3225137284270052937[188] = 0;
   out_3225137284270052937[189] = 0;
   out_3225137284270052937[190] = 0;
   out_3225137284270052937[191] = 0;
   out_3225137284270052937[192] = 0;
   out_3225137284270052937[193] = 0;
   out_3225137284270052937[194] = 0;
   out_3225137284270052937[195] = 0;
   out_3225137284270052937[196] = 0;
   out_3225137284270052937[197] = 1.0;
   out_3225137284270052937[198] = 0;
   out_3225137284270052937[199] = 0;
   out_3225137284270052937[200] = 0;
   out_3225137284270052937[201] = 0;
   out_3225137284270052937[202] = 0;
   out_3225137284270052937[203] = 0;
   out_3225137284270052937[204] = 0;
   out_3225137284270052937[205] = 0;
   out_3225137284270052937[206] = 0;
   out_3225137284270052937[207] = 0;
   out_3225137284270052937[208] = 0;
   out_3225137284270052937[209] = 0;
   out_3225137284270052937[210] = 0;
   out_3225137284270052937[211] = 0;
   out_3225137284270052937[212] = 0;
   out_3225137284270052937[213] = 0;
   out_3225137284270052937[214] = 0;
   out_3225137284270052937[215] = 0;
   out_3225137284270052937[216] = 0;
   out_3225137284270052937[217] = 0;
   out_3225137284270052937[218] = 0;
   out_3225137284270052937[219] = 1.0;
   out_3225137284270052937[220] = 0;
   out_3225137284270052937[221] = 0;
   out_3225137284270052937[222] = 0;
   out_3225137284270052937[223] = 0;
   out_3225137284270052937[224] = 0;
   out_3225137284270052937[225] = 0;
   out_3225137284270052937[226] = 0;
   out_3225137284270052937[227] = 0;
   out_3225137284270052937[228] = 0;
   out_3225137284270052937[229] = 0;
   out_3225137284270052937[230] = 0;
   out_3225137284270052937[231] = 0;
   out_3225137284270052937[232] = 0;
   out_3225137284270052937[233] = 0;
   out_3225137284270052937[234] = 0;
   out_3225137284270052937[235] = 0;
   out_3225137284270052937[236] = 0;
   out_3225137284270052937[237] = 0;
   out_3225137284270052937[238] = 0;
   out_3225137284270052937[239] = 0;
   out_3225137284270052937[240] = 0;
   out_3225137284270052937[241] = 1.0;
   out_3225137284270052937[242] = 0;
   out_3225137284270052937[243] = 0;
   out_3225137284270052937[244] = 0;
   out_3225137284270052937[245] = 0;
   out_3225137284270052937[246] = 0;
   out_3225137284270052937[247] = 0;
   out_3225137284270052937[248] = 0;
   out_3225137284270052937[249] = 0;
   out_3225137284270052937[250] = 0;
   out_3225137284270052937[251] = 0;
   out_3225137284270052937[252] = 0;
   out_3225137284270052937[253] = 0;
   out_3225137284270052937[254] = 0;
   out_3225137284270052937[255] = 0;
   out_3225137284270052937[256] = 0;
   out_3225137284270052937[257] = 0;
   out_3225137284270052937[258] = 0;
   out_3225137284270052937[259] = 0;
   out_3225137284270052937[260] = 0;
   out_3225137284270052937[261] = 0;
   out_3225137284270052937[262] = 0;
   out_3225137284270052937[263] = 1.0;
   out_3225137284270052937[264] = 0;
   out_3225137284270052937[265] = 0;
   out_3225137284270052937[266] = 0;
   out_3225137284270052937[267] = 0;
   out_3225137284270052937[268] = 0;
   out_3225137284270052937[269] = 0;
   out_3225137284270052937[270] = 0;
   out_3225137284270052937[271] = 0;
   out_3225137284270052937[272] = 0;
   out_3225137284270052937[273] = 0;
   out_3225137284270052937[274] = 0;
   out_3225137284270052937[275] = 0;
   out_3225137284270052937[276] = 0;
   out_3225137284270052937[277] = 0;
   out_3225137284270052937[278] = 0;
   out_3225137284270052937[279] = 0;
   out_3225137284270052937[280] = 0;
   out_3225137284270052937[281] = 0;
   out_3225137284270052937[282] = 0;
   out_3225137284270052937[283] = 0;
   out_3225137284270052937[284] = 0;
   out_3225137284270052937[285] = 1.0;
   out_3225137284270052937[286] = 0;
   out_3225137284270052937[287] = 0;
   out_3225137284270052937[288] = 0;
   out_3225137284270052937[289] = 0;
   out_3225137284270052937[290] = 0;
   out_3225137284270052937[291] = 0;
   out_3225137284270052937[292] = 0;
   out_3225137284270052937[293] = 0;
   out_3225137284270052937[294] = 0;
   out_3225137284270052937[295] = 0;
   out_3225137284270052937[296] = 0;
   out_3225137284270052937[297] = 0;
   out_3225137284270052937[298] = 0;
   out_3225137284270052937[299] = 0;
   out_3225137284270052937[300] = 0;
   out_3225137284270052937[301] = 0;
   out_3225137284270052937[302] = 0;
   out_3225137284270052937[303] = 0;
   out_3225137284270052937[304] = 0;
   out_3225137284270052937[305] = 0;
   out_3225137284270052937[306] = 0;
   out_3225137284270052937[307] = 1.0;
   out_3225137284270052937[308] = 0;
   out_3225137284270052937[309] = 0;
   out_3225137284270052937[310] = 0;
   out_3225137284270052937[311] = 0;
   out_3225137284270052937[312] = 0;
   out_3225137284270052937[313] = 0;
   out_3225137284270052937[314] = 0;
   out_3225137284270052937[315] = 0;
   out_3225137284270052937[316] = 0;
   out_3225137284270052937[317] = 0;
   out_3225137284270052937[318] = 0;
   out_3225137284270052937[319] = 0;
   out_3225137284270052937[320] = 0;
   out_3225137284270052937[321] = 0;
   out_3225137284270052937[322] = 0;
   out_3225137284270052937[323] = 0;
   out_3225137284270052937[324] = 0;
   out_3225137284270052937[325] = 0;
   out_3225137284270052937[326] = 0;
   out_3225137284270052937[327] = 0;
   out_3225137284270052937[328] = 0;
   out_3225137284270052937[329] = 1.0;
   out_3225137284270052937[330] = 0;
   out_3225137284270052937[331] = 0;
   out_3225137284270052937[332] = 0;
   out_3225137284270052937[333] = 0;
   out_3225137284270052937[334] = 0;
   out_3225137284270052937[335] = 0;
   out_3225137284270052937[336] = 0;
   out_3225137284270052937[337] = 0;
   out_3225137284270052937[338] = 0;
   out_3225137284270052937[339] = 0;
   out_3225137284270052937[340] = 0;
   out_3225137284270052937[341] = 0;
   out_3225137284270052937[342] = 0;
   out_3225137284270052937[343] = 0;
   out_3225137284270052937[344] = 0;
   out_3225137284270052937[345] = 0;
   out_3225137284270052937[346] = 0;
   out_3225137284270052937[347] = 0;
   out_3225137284270052937[348] = 0;
   out_3225137284270052937[349] = 0;
   out_3225137284270052937[350] = 0;
   out_3225137284270052937[351] = 1.0;
   out_3225137284270052937[352] = 0;
   out_3225137284270052937[353] = 0;
   out_3225137284270052937[354] = 0;
   out_3225137284270052937[355] = 0;
   out_3225137284270052937[356] = 0;
   out_3225137284270052937[357] = 0;
   out_3225137284270052937[358] = 0;
   out_3225137284270052937[359] = 0;
   out_3225137284270052937[360] = 0;
   out_3225137284270052937[361] = 0;
   out_3225137284270052937[362] = 0;
   out_3225137284270052937[363] = 0;
   out_3225137284270052937[364] = 0;
   out_3225137284270052937[365] = 0;
   out_3225137284270052937[366] = 0;
   out_3225137284270052937[367] = 0;
   out_3225137284270052937[368] = 0;
   out_3225137284270052937[369] = 0;
   out_3225137284270052937[370] = 0;
   out_3225137284270052937[371] = 0;
   out_3225137284270052937[372] = 0;
   out_3225137284270052937[373] = 1.0;
   out_3225137284270052937[374] = 0;
   out_3225137284270052937[375] = 0;
   out_3225137284270052937[376] = 0;
   out_3225137284270052937[377] = 0;
   out_3225137284270052937[378] = 0;
   out_3225137284270052937[379] = 0;
   out_3225137284270052937[380] = 0;
   out_3225137284270052937[381] = 0;
   out_3225137284270052937[382] = 0;
   out_3225137284270052937[383] = 0;
   out_3225137284270052937[384] = 0;
   out_3225137284270052937[385] = 0;
   out_3225137284270052937[386] = 0;
   out_3225137284270052937[387] = 0;
   out_3225137284270052937[388] = 0;
   out_3225137284270052937[389] = 0;
   out_3225137284270052937[390] = 0;
   out_3225137284270052937[391] = 0;
   out_3225137284270052937[392] = 0;
   out_3225137284270052937[393] = 0;
   out_3225137284270052937[394] = 0;
   out_3225137284270052937[395] = 1.0;
   out_3225137284270052937[396] = 0;
   out_3225137284270052937[397] = 0;
   out_3225137284270052937[398] = 0;
   out_3225137284270052937[399] = 0;
   out_3225137284270052937[400] = 0;
   out_3225137284270052937[401] = 0;
   out_3225137284270052937[402] = 0;
   out_3225137284270052937[403] = 0;
   out_3225137284270052937[404] = 0;
   out_3225137284270052937[405] = 0;
   out_3225137284270052937[406] = 0;
   out_3225137284270052937[407] = 0;
   out_3225137284270052937[408] = 0;
   out_3225137284270052937[409] = 0;
   out_3225137284270052937[410] = 0;
   out_3225137284270052937[411] = 0;
   out_3225137284270052937[412] = 0;
   out_3225137284270052937[413] = 0;
   out_3225137284270052937[414] = 0;
   out_3225137284270052937[415] = 0;
   out_3225137284270052937[416] = 0;
   out_3225137284270052937[417] = 1.0;
   out_3225137284270052937[418] = 0;
   out_3225137284270052937[419] = 0;
   out_3225137284270052937[420] = 0;
   out_3225137284270052937[421] = 0;
   out_3225137284270052937[422] = 0;
   out_3225137284270052937[423] = 0;
   out_3225137284270052937[424] = 0;
   out_3225137284270052937[425] = 0;
   out_3225137284270052937[426] = 0;
   out_3225137284270052937[427] = 0;
   out_3225137284270052937[428] = 0;
   out_3225137284270052937[429] = 0;
   out_3225137284270052937[430] = 0;
   out_3225137284270052937[431] = 0;
   out_3225137284270052937[432] = 0;
   out_3225137284270052937[433] = 0;
   out_3225137284270052937[434] = 0;
   out_3225137284270052937[435] = 0;
   out_3225137284270052937[436] = 0;
   out_3225137284270052937[437] = 0;
   out_3225137284270052937[438] = 0;
   out_3225137284270052937[439] = 1.0;
   out_3225137284270052937[440] = 0;
   out_3225137284270052937[441] = 0;
   out_3225137284270052937[442] = 0;
   out_3225137284270052937[443] = 0;
   out_3225137284270052937[444] = 0;
   out_3225137284270052937[445] = 0;
   out_3225137284270052937[446] = 0;
   out_3225137284270052937[447] = 0;
   out_3225137284270052937[448] = 0;
   out_3225137284270052937[449] = 0;
   out_3225137284270052937[450] = 0;
   out_3225137284270052937[451] = 0;
   out_3225137284270052937[452] = 0;
   out_3225137284270052937[453] = 0;
   out_3225137284270052937[454] = 0;
   out_3225137284270052937[455] = 0;
   out_3225137284270052937[456] = 0;
   out_3225137284270052937[457] = 0;
   out_3225137284270052937[458] = 0;
   out_3225137284270052937[459] = 0;
   out_3225137284270052937[460] = 0;
   out_3225137284270052937[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6676648528904182614) {
   out_6676648528904182614[0] = dt*state[7] + state[0];
   out_6676648528904182614[1] = dt*state[8] + state[1];
   out_6676648528904182614[2] = dt*state[9] + state[2];
   out_6676648528904182614[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6676648528904182614[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6676648528904182614[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6676648528904182614[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6676648528904182614[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6676648528904182614[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6676648528904182614[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6676648528904182614[10] = state[10];
   out_6676648528904182614[11] = state[11];
   out_6676648528904182614[12] = state[12];
   out_6676648528904182614[13] = state[13];
   out_6676648528904182614[14] = state[14];
   out_6676648528904182614[15] = state[15];
   out_6676648528904182614[16] = state[16];
   out_6676648528904182614[17] = state[17];
   out_6676648528904182614[18] = state[18];
   out_6676648528904182614[19] = state[19];
   out_6676648528904182614[20] = state[20];
   out_6676648528904182614[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2422814851340655634) {
   out_2422814851340655634[0] = 1;
   out_2422814851340655634[1] = 0;
   out_2422814851340655634[2] = 0;
   out_2422814851340655634[3] = 0;
   out_2422814851340655634[4] = 0;
   out_2422814851340655634[5] = 0;
   out_2422814851340655634[6] = dt;
   out_2422814851340655634[7] = 0;
   out_2422814851340655634[8] = 0;
   out_2422814851340655634[9] = 0;
   out_2422814851340655634[10] = 0;
   out_2422814851340655634[11] = 0;
   out_2422814851340655634[12] = 0;
   out_2422814851340655634[13] = 0;
   out_2422814851340655634[14] = 0;
   out_2422814851340655634[15] = 0;
   out_2422814851340655634[16] = 0;
   out_2422814851340655634[17] = 0;
   out_2422814851340655634[18] = 0;
   out_2422814851340655634[19] = 0;
   out_2422814851340655634[20] = 0;
   out_2422814851340655634[21] = 0;
   out_2422814851340655634[22] = 1;
   out_2422814851340655634[23] = 0;
   out_2422814851340655634[24] = 0;
   out_2422814851340655634[25] = 0;
   out_2422814851340655634[26] = 0;
   out_2422814851340655634[27] = 0;
   out_2422814851340655634[28] = dt;
   out_2422814851340655634[29] = 0;
   out_2422814851340655634[30] = 0;
   out_2422814851340655634[31] = 0;
   out_2422814851340655634[32] = 0;
   out_2422814851340655634[33] = 0;
   out_2422814851340655634[34] = 0;
   out_2422814851340655634[35] = 0;
   out_2422814851340655634[36] = 0;
   out_2422814851340655634[37] = 0;
   out_2422814851340655634[38] = 0;
   out_2422814851340655634[39] = 0;
   out_2422814851340655634[40] = 0;
   out_2422814851340655634[41] = 0;
   out_2422814851340655634[42] = 0;
   out_2422814851340655634[43] = 0;
   out_2422814851340655634[44] = 1;
   out_2422814851340655634[45] = 0;
   out_2422814851340655634[46] = 0;
   out_2422814851340655634[47] = 0;
   out_2422814851340655634[48] = 0;
   out_2422814851340655634[49] = 0;
   out_2422814851340655634[50] = dt;
   out_2422814851340655634[51] = 0;
   out_2422814851340655634[52] = 0;
   out_2422814851340655634[53] = 0;
   out_2422814851340655634[54] = 0;
   out_2422814851340655634[55] = 0;
   out_2422814851340655634[56] = 0;
   out_2422814851340655634[57] = 0;
   out_2422814851340655634[58] = 0;
   out_2422814851340655634[59] = 0;
   out_2422814851340655634[60] = 0;
   out_2422814851340655634[61] = 0;
   out_2422814851340655634[62] = 0;
   out_2422814851340655634[63] = 0;
   out_2422814851340655634[64] = 0;
   out_2422814851340655634[65] = 0;
   out_2422814851340655634[66] = 1;
   out_2422814851340655634[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2422814851340655634[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2422814851340655634[69] = 0;
   out_2422814851340655634[70] = 0;
   out_2422814851340655634[71] = 0;
   out_2422814851340655634[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2422814851340655634[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2422814851340655634[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2422814851340655634[75] = 0;
   out_2422814851340655634[76] = 0;
   out_2422814851340655634[77] = 0;
   out_2422814851340655634[78] = 0;
   out_2422814851340655634[79] = 0;
   out_2422814851340655634[80] = 0;
   out_2422814851340655634[81] = 0;
   out_2422814851340655634[82] = 0;
   out_2422814851340655634[83] = 0;
   out_2422814851340655634[84] = 0;
   out_2422814851340655634[85] = 0;
   out_2422814851340655634[86] = 0;
   out_2422814851340655634[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2422814851340655634[88] = 1;
   out_2422814851340655634[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2422814851340655634[90] = 0;
   out_2422814851340655634[91] = 0;
   out_2422814851340655634[92] = 0;
   out_2422814851340655634[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2422814851340655634[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2422814851340655634[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2422814851340655634[96] = 0;
   out_2422814851340655634[97] = 0;
   out_2422814851340655634[98] = 0;
   out_2422814851340655634[99] = 0;
   out_2422814851340655634[100] = 0;
   out_2422814851340655634[101] = 0;
   out_2422814851340655634[102] = 0;
   out_2422814851340655634[103] = 0;
   out_2422814851340655634[104] = 0;
   out_2422814851340655634[105] = 0;
   out_2422814851340655634[106] = 0;
   out_2422814851340655634[107] = 0;
   out_2422814851340655634[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2422814851340655634[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2422814851340655634[110] = 1;
   out_2422814851340655634[111] = 0;
   out_2422814851340655634[112] = 0;
   out_2422814851340655634[113] = 0;
   out_2422814851340655634[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2422814851340655634[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2422814851340655634[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2422814851340655634[117] = 0;
   out_2422814851340655634[118] = 0;
   out_2422814851340655634[119] = 0;
   out_2422814851340655634[120] = 0;
   out_2422814851340655634[121] = 0;
   out_2422814851340655634[122] = 0;
   out_2422814851340655634[123] = 0;
   out_2422814851340655634[124] = 0;
   out_2422814851340655634[125] = 0;
   out_2422814851340655634[126] = 0;
   out_2422814851340655634[127] = 0;
   out_2422814851340655634[128] = 0;
   out_2422814851340655634[129] = 0;
   out_2422814851340655634[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2422814851340655634[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2422814851340655634[132] = 1;
   out_2422814851340655634[133] = 0;
   out_2422814851340655634[134] = 0;
   out_2422814851340655634[135] = 0;
   out_2422814851340655634[136] = 0;
   out_2422814851340655634[137] = 0;
   out_2422814851340655634[138] = 0;
   out_2422814851340655634[139] = 0;
   out_2422814851340655634[140] = 0;
   out_2422814851340655634[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2422814851340655634[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2422814851340655634[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2422814851340655634[144] = 0;
   out_2422814851340655634[145] = 0;
   out_2422814851340655634[146] = 0;
   out_2422814851340655634[147] = 0;
   out_2422814851340655634[148] = 0;
   out_2422814851340655634[149] = 0;
   out_2422814851340655634[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2422814851340655634[151] = 0;
   out_2422814851340655634[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2422814851340655634[153] = 0;
   out_2422814851340655634[154] = 1;
   out_2422814851340655634[155] = 0;
   out_2422814851340655634[156] = 0;
   out_2422814851340655634[157] = 0;
   out_2422814851340655634[158] = 0;
   out_2422814851340655634[159] = 0;
   out_2422814851340655634[160] = 0;
   out_2422814851340655634[161] = 0;
   out_2422814851340655634[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2422814851340655634[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2422814851340655634[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2422814851340655634[165] = 0;
   out_2422814851340655634[166] = 0;
   out_2422814851340655634[167] = 0;
   out_2422814851340655634[168] = 0;
   out_2422814851340655634[169] = 0;
   out_2422814851340655634[170] = 0;
   out_2422814851340655634[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2422814851340655634[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2422814851340655634[173] = 0;
   out_2422814851340655634[174] = 0;
   out_2422814851340655634[175] = 0;
   out_2422814851340655634[176] = 1;
   out_2422814851340655634[177] = 0;
   out_2422814851340655634[178] = 0;
   out_2422814851340655634[179] = 0;
   out_2422814851340655634[180] = 0;
   out_2422814851340655634[181] = 0;
   out_2422814851340655634[182] = 0;
   out_2422814851340655634[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2422814851340655634[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2422814851340655634[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2422814851340655634[186] = 0;
   out_2422814851340655634[187] = 0;
   out_2422814851340655634[188] = 0;
   out_2422814851340655634[189] = 0;
   out_2422814851340655634[190] = 0;
   out_2422814851340655634[191] = 0;
   out_2422814851340655634[192] = 0;
   out_2422814851340655634[193] = 0;
   out_2422814851340655634[194] = 0;
   out_2422814851340655634[195] = 0;
   out_2422814851340655634[196] = 0;
   out_2422814851340655634[197] = 0;
   out_2422814851340655634[198] = 1;
   out_2422814851340655634[199] = 0;
   out_2422814851340655634[200] = 0;
   out_2422814851340655634[201] = 0;
   out_2422814851340655634[202] = 0;
   out_2422814851340655634[203] = 0;
   out_2422814851340655634[204] = 0;
   out_2422814851340655634[205] = 0;
   out_2422814851340655634[206] = 0;
   out_2422814851340655634[207] = 0;
   out_2422814851340655634[208] = 0;
   out_2422814851340655634[209] = 0;
   out_2422814851340655634[210] = 0;
   out_2422814851340655634[211] = 0;
   out_2422814851340655634[212] = 0;
   out_2422814851340655634[213] = 0;
   out_2422814851340655634[214] = 0;
   out_2422814851340655634[215] = 0;
   out_2422814851340655634[216] = 0;
   out_2422814851340655634[217] = 0;
   out_2422814851340655634[218] = 0;
   out_2422814851340655634[219] = 0;
   out_2422814851340655634[220] = 1;
   out_2422814851340655634[221] = 0;
   out_2422814851340655634[222] = 0;
   out_2422814851340655634[223] = 0;
   out_2422814851340655634[224] = 0;
   out_2422814851340655634[225] = 0;
   out_2422814851340655634[226] = 0;
   out_2422814851340655634[227] = 0;
   out_2422814851340655634[228] = 0;
   out_2422814851340655634[229] = 0;
   out_2422814851340655634[230] = 0;
   out_2422814851340655634[231] = 0;
   out_2422814851340655634[232] = 0;
   out_2422814851340655634[233] = 0;
   out_2422814851340655634[234] = 0;
   out_2422814851340655634[235] = 0;
   out_2422814851340655634[236] = 0;
   out_2422814851340655634[237] = 0;
   out_2422814851340655634[238] = 0;
   out_2422814851340655634[239] = 0;
   out_2422814851340655634[240] = 0;
   out_2422814851340655634[241] = 0;
   out_2422814851340655634[242] = 1;
   out_2422814851340655634[243] = 0;
   out_2422814851340655634[244] = 0;
   out_2422814851340655634[245] = 0;
   out_2422814851340655634[246] = 0;
   out_2422814851340655634[247] = 0;
   out_2422814851340655634[248] = 0;
   out_2422814851340655634[249] = 0;
   out_2422814851340655634[250] = 0;
   out_2422814851340655634[251] = 0;
   out_2422814851340655634[252] = 0;
   out_2422814851340655634[253] = 0;
   out_2422814851340655634[254] = 0;
   out_2422814851340655634[255] = 0;
   out_2422814851340655634[256] = 0;
   out_2422814851340655634[257] = 0;
   out_2422814851340655634[258] = 0;
   out_2422814851340655634[259] = 0;
   out_2422814851340655634[260] = 0;
   out_2422814851340655634[261] = 0;
   out_2422814851340655634[262] = 0;
   out_2422814851340655634[263] = 0;
   out_2422814851340655634[264] = 1;
   out_2422814851340655634[265] = 0;
   out_2422814851340655634[266] = 0;
   out_2422814851340655634[267] = 0;
   out_2422814851340655634[268] = 0;
   out_2422814851340655634[269] = 0;
   out_2422814851340655634[270] = 0;
   out_2422814851340655634[271] = 0;
   out_2422814851340655634[272] = 0;
   out_2422814851340655634[273] = 0;
   out_2422814851340655634[274] = 0;
   out_2422814851340655634[275] = 0;
   out_2422814851340655634[276] = 0;
   out_2422814851340655634[277] = 0;
   out_2422814851340655634[278] = 0;
   out_2422814851340655634[279] = 0;
   out_2422814851340655634[280] = 0;
   out_2422814851340655634[281] = 0;
   out_2422814851340655634[282] = 0;
   out_2422814851340655634[283] = 0;
   out_2422814851340655634[284] = 0;
   out_2422814851340655634[285] = 0;
   out_2422814851340655634[286] = 1;
   out_2422814851340655634[287] = 0;
   out_2422814851340655634[288] = 0;
   out_2422814851340655634[289] = 0;
   out_2422814851340655634[290] = 0;
   out_2422814851340655634[291] = 0;
   out_2422814851340655634[292] = 0;
   out_2422814851340655634[293] = 0;
   out_2422814851340655634[294] = 0;
   out_2422814851340655634[295] = 0;
   out_2422814851340655634[296] = 0;
   out_2422814851340655634[297] = 0;
   out_2422814851340655634[298] = 0;
   out_2422814851340655634[299] = 0;
   out_2422814851340655634[300] = 0;
   out_2422814851340655634[301] = 0;
   out_2422814851340655634[302] = 0;
   out_2422814851340655634[303] = 0;
   out_2422814851340655634[304] = 0;
   out_2422814851340655634[305] = 0;
   out_2422814851340655634[306] = 0;
   out_2422814851340655634[307] = 0;
   out_2422814851340655634[308] = 1;
   out_2422814851340655634[309] = 0;
   out_2422814851340655634[310] = 0;
   out_2422814851340655634[311] = 0;
   out_2422814851340655634[312] = 0;
   out_2422814851340655634[313] = 0;
   out_2422814851340655634[314] = 0;
   out_2422814851340655634[315] = 0;
   out_2422814851340655634[316] = 0;
   out_2422814851340655634[317] = 0;
   out_2422814851340655634[318] = 0;
   out_2422814851340655634[319] = 0;
   out_2422814851340655634[320] = 0;
   out_2422814851340655634[321] = 0;
   out_2422814851340655634[322] = 0;
   out_2422814851340655634[323] = 0;
   out_2422814851340655634[324] = 0;
   out_2422814851340655634[325] = 0;
   out_2422814851340655634[326] = 0;
   out_2422814851340655634[327] = 0;
   out_2422814851340655634[328] = 0;
   out_2422814851340655634[329] = 0;
   out_2422814851340655634[330] = 1;
   out_2422814851340655634[331] = 0;
   out_2422814851340655634[332] = 0;
   out_2422814851340655634[333] = 0;
   out_2422814851340655634[334] = 0;
   out_2422814851340655634[335] = 0;
   out_2422814851340655634[336] = 0;
   out_2422814851340655634[337] = 0;
   out_2422814851340655634[338] = 0;
   out_2422814851340655634[339] = 0;
   out_2422814851340655634[340] = 0;
   out_2422814851340655634[341] = 0;
   out_2422814851340655634[342] = 0;
   out_2422814851340655634[343] = 0;
   out_2422814851340655634[344] = 0;
   out_2422814851340655634[345] = 0;
   out_2422814851340655634[346] = 0;
   out_2422814851340655634[347] = 0;
   out_2422814851340655634[348] = 0;
   out_2422814851340655634[349] = 0;
   out_2422814851340655634[350] = 0;
   out_2422814851340655634[351] = 0;
   out_2422814851340655634[352] = 1;
   out_2422814851340655634[353] = 0;
   out_2422814851340655634[354] = 0;
   out_2422814851340655634[355] = 0;
   out_2422814851340655634[356] = 0;
   out_2422814851340655634[357] = 0;
   out_2422814851340655634[358] = 0;
   out_2422814851340655634[359] = 0;
   out_2422814851340655634[360] = 0;
   out_2422814851340655634[361] = 0;
   out_2422814851340655634[362] = 0;
   out_2422814851340655634[363] = 0;
   out_2422814851340655634[364] = 0;
   out_2422814851340655634[365] = 0;
   out_2422814851340655634[366] = 0;
   out_2422814851340655634[367] = 0;
   out_2422814851340655634[368] = 0;
   out_2422814851340655634[369] = 0;
   out_2422814851340655634[370] = 0;
   out_2422814851340655634[371] = 0;
   out_2422814851340655634[372] = 0;
   out_2422814851340655634[373] = 0;
   out_2422814851340655634[374] = 1;
   out_2422814851340655634[375] = 0;
   out_2422814851340655634[376] = 0;
   out_2422814851340655634[377] = 0;
   out_2422814851340655634[378] = 0;
   out_2422814851340655634[379] = 0;
   out_2422814851340655634[380] = 0;
   out_2422814851340655634[381] = 0;
   out_2422814851340655634[382] = 0;
   out_2422814851340655634[383] = 0;
   out_2422814851340655634[384] = 0;
   out_2422814851340655634[385] = 0;
   out_2422814851340655634[386] = 0;
   out_2422814851340655634[387] = 0;
   out_2422814851340655634[388] = 0;
   out_2422814851340655634[389] = 0;
   out_2422814851340655634[390] = 0;
   out_2422814851340655634[391] = 0;
   out_2422814851340655634[392] = 0;
   out_2422814851340655634[393] = 0;
   out_2422814851340655634[394] = 0;
   out_2422814851340655634[395] = 0;
   out_2422814851340655634[396] = 1;
   out_2422814851340655634[397] = 0;
   out_2422814851340655634[398] = 0;
   out_2422814851340655634[399] = 0;
   out_2422814851340655634[400] = 0;
   out_2422814851340655634[401] = 0;
   out_2422814851340655634[402] = 0;
   out_2422814851340655634[403] = 0;
   out_2422814851340655634[404] = 0;
   out_2422814851340655634[405] = 0;
   out_2422814851340655634[406] = 0;
   out_2422814851340655634[407] = 0;
   out_2422814851340655634[408] = 0;
   out_2422814851340655634[409] = 0;
   out_2422814851340655634[410] = 0;
   out_2422814851340655634[411] = 0;
   out_2422814851340655634[412] = 0;
   out_2422814851340655634[413] = 0;
   out_2422814851340655634[414] = 0;
   out_2422814851340655634[415] = 0;
   out_2422814851340655634[416] = 0;
   out_2422814851340655634[417] = 0;
   out_2422814851340655634[418] = 1;
   out_2422814851340655634[419] = 0;
   out_2422814851340655634[420] = 0;
   out_2422814851340655634[421] = 0;
   out_2422814851340655634[422] = 0;
   out_2422814851340655634[423] = 0;
   out_2422814851340655634[424] = 0;
   out_2422814851340655634[425] = 0;
   out_2422814851340655634[426] = 0;
   out_2422814851340655634[427] = 0;
   out_2422814851340655634[428] = 0;
   out_2422814851340655634[429] = 0;
   out_2422814851340655634[430] = 0;
   out_2422814851340655634[431] = 0;
   out_2422814851340655634[432] = 0;
   out_2422814851340655634[433] = 0;
   out_2422814851340655634[434] = 0;
   out_2422814851340655634[435] = 0;
   out_2422814851340655634[436] = 0;
   out_2422814851340655634[437] = 0;
   out_2422814851340655634[438] = 0;
   out_2422814851340655634[439] = 0;
   out_2422814851340655634[440] = 1;
}
void h_4(double *state, double *unused, double *out_7905629914609901013) {
   out_7905629914609901013[0] = state[10] + state[13];
   out_7905629914609901013[1] = state[11] + state[14];
   out_7905629914609901013[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6417935588060894208) {
   out_6417935588060894208[0] = 0;
   out_6417935588060894208[1] = 0;
   out_6417935588060894208[2] = 0;
   out_6417935588060894208[3] = 0;
   out_6417935588060894208[4] = 0;
   out_6417935588060894208[5] = 0;
   out_6417935588060894208[6] = 0;
   out_6417935588060894208[7] = 0;
   out_6417935588060894208[8] = 0;
   out_6417935588060894208[9] = 0;
   out_6417935588060894208[10] = 1;
   out_6417935588060894208[11] = 0;
   out_6417935588060894208[12] = 0;
   out_6417935588060894208[13] = 1;
   out_6417935588060894208[14] = 0;
   out_6417935588060894208[15] = 0;
   out_6417935588060894208[16] = 0;
   out_6417935588060894208[17] = 0;
   out_6417935588060894208[18] = 0;
   out_6417935588060894208[19] = 0;
   out_6417935588060894208[20] = 0;
   out_6417935588060894208[21] = 0;
   out_6417935588060894208[22] = 0;
   out_6417935588060894208[23] = 0;
   out_6417935588060894208[24] = 0;
   out_6417935588060894208[25] = 0;
   out_6417935588060894208[26] = 0;
   out_6417935588060894208[27] = 0;
   out_6417935588060894208[28] = 0;
   out_6417935588060894208[29] = 0;
   out_6417935588060894208[30] = 0;
   out_6417935588060894208[31] = 0;
   out_6417935588060894208[32] = 0;
   out_6417935588060894208[33] = 1;
   out_6417935588060894208[34] = 0;
   out_6417935588060894208[35] = 0;
   out_6417935588060894208[36] = 1;
   out_6417935588060894208[37] = 0;
   out_6417935588060894208[38] = 0;
   out_6417935588060894208[39] = 0;
   out_6417935588060894208[40] = 0;
   out_6417935588060894208[41] = 0;
   out_6417935588060894208[42] = 0;
   out_6417935588060894208[43] = 0;
   out_6417935588060894208[44] = 0;
   out_6417935588060894208[45] = 0;
   out_6417935588060894208[46] = 0;
   out_6417935588060894208[47] = 0;
   out_6417935588060894208[48] = 0;
   out_6417935588060894208[49] = 0;
   out_6417935588060894208[50] = 0;
   out_6417935588060894208[51] = 0;
   out_6417935588060894208[52] = 0;
   out_6417935588060894208[53] = 0;
   out_6417935588060894208[54] = 0;
   out_6417935588060894208[55] = 0;
   out_6417935588060894208[56] = 1;
   out_6417935588060894208[57] = 0;
   out_6417935588060894208[58] = 0;
   out_6417935588060894208[59] = 1;
   out_6417935588060894208[60] = 0;
   out_6417935588060894208[61] = 0;
   out_6417935588060894208[62] = 0;
   out_6417935588060894208[63] = 0;
   out_6417935588060894208[64] = 0;
   out_6417935588060894208[65] = 0;
}
void h_9(double *state, double *unused, double *out_6011904027858753050) {
   out_6011904027858753050[0] = state[10];
   out_6011904027858753050[1] = state[11];
   out_6011904027858753050[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7871640749293879925) {
   out_7871640749293879925[0] = 0;
   out_7871640749293879925[1] = 0;
   out_7871640749293879925[2] = 0;
   out_7871640749293879925[3] = 0;
   out_7871640749293879925[4] = 0;
   out_7871640749293879925[5] = 0;
   out_7871640749293879925[6] = 0;
   out_7871640749293879925[7] = 0;
   out_7871640749293879925[8] = 0;
   out_7871640749293879925[9] = 0;
   out_7871640749293879925[10] = 1;
   out_7871640749293879925[11] = 0;
   out_7871640749293879925[12] = 0;
   out_7871640749293879925[13] = 0;
   out_7871640749293879925[14] = 0;
   out_7871640749293879925[15] = 0;
   out_7871640749293879925[16] = 0;
   out_7871640749293879925[17] = 0;
   out_7871640749293879925[18] = 0;
   out_7871640749293879925[19] = 0;
   out_7871640749293879925[20] = 0;
   out_7871640749293879925[21] = 0;
   out_7871640749293879925[22] = 0;
   out_7871640749293879925[23] = 0;
   out_7871640749293879925[24] = 0;
   out_7871640749293879925[25] = 0;
   out_7871640749293879925[26] = 0;
   out_7871640749293879925[27] = 0;
   out_7871640749293879925[28] = 0;
   out_7871640749293879925[29] = 0;
   out_7871640749293879925[30] = 0;
   out_7871640749293879925[31] = 0;
   out_7871640749293879925[32] = 0;
   out_7871640749293879925[33] = 1;
   out_7871640749293879925[34] = 0;
   out_7871640749293879925[35] = 0;
   out_7871640749293879925[36] = 0;
   out_7871640749293879925[37] = 0;
   out_7871640749293879925[38] = 0;
   out_7871640749293879925[39] = 0;
   out_7871640749293879925[40] = 0;
   out_7871640749293879925[41] = 0;
   out_7871640749293879925[42] = 0;
   out_7871640749293879925[43] = 0;
   out_7871640749293879925[44] = 0;
   out_7871640749293879925[45] = 0;
   out_7871640749293879925[46] = 0;
   out_7871640749293879925[47] = 0;
   out_7871640749293879925[48] = 0;
   out_7871640749293879925[49] = 0;
   out_7871640749293879925[50] = 0;
   out_7871640749293879925[51] = 0;
   out_7871640749293879925[52] = 0;
   out_7871640749293879925[53] = 0;
   out_7871640749293879925[54] = 0;
   out_7871640749293879925[55] = 0;
   out_7871640749293879925[56] = 1;
   out_7871640749293879925[57] = 0;
   out_7871640749293879925[58] = 0;
   out_7871640749293879925[59] = 0;
   out_7871640749293879925[60] = 0;
   out_7871640749293879925[61] = 0;
   out_7871640749293879925[62] = 0;
   out_7871640749293879925[63] = 0;
   out_7871640749293879925[64] = 0;
   out_7871640749293879925[65] = 0;
}
void h_10(double *state, double *unused, double *out_4787295524011749156) {
   out_4787295524011749156[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4787295524011749156[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4787295524011749156[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2791411260120262675) {
   out_2791411260120262675[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2791411260120262675[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2791411260120262675[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2791411260120262675[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2791411260120262675[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2791411260120262675[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2791411260120262675[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2791411260120262675[7] = 0;
   out_2791411260120262675[8] = 0;
   out_2791411260120262675[9] = 0;
   out_2791411260120262675[10] = 0;
   out_2791411260120262675[11] = 0;
   out_2791411260120262675[12] = 0;
   out_2791411260120262675[13] = 0;
   out_2791411260120262675[14] = 0;
   out_2791411260120262675[15] = 0;
   out_2791411260120262675[16] = 1;
   out_2791411260120262675[17] = 0;
   out_2791411260120262675[18] = 0;
   out_2791411260120262675[19] = 1;
   out_2791411260120262675[20] = 0;
   out_2791411260120262675[21] = 0;
   out_2791411260120262675[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2791411260120262675[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2791411260120262675[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2791411260120262675[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2791411260120262675[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2791411260120262675[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2791411260120262675[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2791411260120262675[29] = 0;
   out_2791411260120262675[30] = 0;
   out_2791411260120262675[31] = 0;
   out_2791411260120262675[32] = 0;
   out_2791411260120262675[33] = 0;
   out_2791411260120262675[34] = 0;
   out_2791411260120262675[35] = 0;
   out_2791411260120262675[36] = 0;
   out_2791411260120262675[37] = 0;
   out_2791411260120262675[38] = 0;
   out_2791411260120262675[39] = 1;
   out_2791411260120262675[40] = 0;
   out_2791411260120262675[41] = 0;
   out_2791411260120262675[42] = 1;
   out_2791411260120262675[43] = 0;
   out_2791411260120262675[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2791411260120262675[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2791411260120262675[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2791411260120262675[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2791411260120262675[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2791411260120262675[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2791411260120262675[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2791411260120262675[51] = 0;
   out_2791411260120262675[52] = 0;
   out_2791411260120262675[53] = 0;
   out_2791411260120262675[54] = 0;
   out_2791411260120262675[55] = 0;
   out_2791411260120262675[56] = 0;
   out_2791411260120262675[57] = 0;
   out_2791411260120262675[58] = 0;
   out_2791411260120262675[59] = 0;
   out_2791411260120262675[60] = 0;
   out_2791411260120262675[61] = 0;
   out_2791411260120262675[62] = 1;
   out_2791411260120262675[63] = 0;
   out_2791411260120262675[64] = 0;
   out_2791411260120262675[65] = 1;
}
void h_12(double *state, double *unused, double *out_1064618350480509991) {
   out_1064618350480509991[0] = state[0];
   out_1064618350480509991[1] = state[1];
   out_1064618350480509991[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5796836563013300541) {
   out_5796836563013300541[0] = 1;
   out_5796836563013300541[1] = 0;
   out_5796836563013300541[2] = 0;
   out_5796836563013300541[3] = 0;
   out_5796836563013300541[4] = 0;
   out_5796836563013300541[5] = 0;
   out_5796836563013300541[6] = 0;
   out_5796836563013300541[7] = 0;
   out_5796836563013300541[8] = 0;
   out_5796836563013300541[9] = 0;
   out_5796836563013300541[10] = 0;
   out_5796836563013300541[11] = 0;
   out_5796836563013300541[12] = 0;
   out_5796836563013300541[13] = 0;
   out_5796836563013300541[14] = 0;
   out_5796836563013300541[15] = 0;
   out_5796836563013300541[16] = 0;
   out_5796836563013300541[17] = 0;
   out_5796836563013300541[18] = 0;
   out_5796836563013300541[19] = 0;
   out_5796836563013300541[20] = 0;
   out_5796836563013300541[21] = 0;
   out_5796836563013300541[22] = 0;
   out_5796836563013300541[23] = 1;
   out_5796836563013300541[24] = 0;
   out_5796836563013300541[25] = 0;
   out_5796836563013300541[26] = 0;
   out_5796836563013300541[27] = 0;
   out_5796836563013300541[28] = 0;
   out_5796836563013300541[29] = 0;
   out_5796836563013300541[30] = 0;
   out_5796836563013300541[31] = 0;
   out_5796836563013300541[32] = 0;
   out_5796836563013300541[33] = 0;
   out_5796836563013300541[34] = 0;
   out_5796836563013300541[35] = 0;
   out_5796836563013300541[36] = 0;
   out_5796836563013300541[37] = 0;
   out_5796836563013300541[38] = 0;
   out_5796836563013300541[39] = 0;
   out_5796836563013300541[40] = 0;
   out_5796836563013300541[41] = 0;
   out_5796836563013300541[42] = 0;
   out_5796836563013300541[43] = 0;
   out_5796836563013300541[44] = 0;
   out_5796836563013300541[45] = 0;
   out_5796836563013300541[46] = 1;
   out_5796836563013300541[47] = 0;
   out_5796836563013300541[48] = 0;
   out_5796836563013300541[49] = 0;
   out_5796836563013300541[50] = 0;
   out_5796836563013300541[51] = 0;
   out_5796836563013300541[52] = 0;
   out_5796836563013300541[53] = 0;
   out_5796836563013300541[54] = 0;
   out_5796836563013300541[55] = 0;
   out_5796836563013300541[56] = 0;
   out_5796836563013300541[57] = 0;
   out_5796836563013300541[58] = 0;
   out_5796836563013300541[59] = 0;
   out_5796836563013300541[60] = 0;
   out_5796836563013300541[61] = 0;
   out_5796836563013300541[62] = 0;
   out_5796836563013300541[63] = 0;
   out_5796836563013300541[64] = 0;
   out_5796836563013300541[65] = 0;
}
void h_35(double *state, double *unused, double *out_6961984814518061679) {
   out_6961984814518061679[0] = state[7];
   out_6961984814518061679[1] = state[8];
   out_6961984814518061679[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3051273530688286832) {
   out_3051273530688286832[0] = 0;
   out_3051273530688286832[1] = 0;
   out_3051273530688286832[2] = 0;
   out_3051273530688286832[3] = 0;
   out_3051273530688286832[4] = 0;
   out_3051273530688286832[5] = 0;
   out_3051273530688286832[6] = 0;
   out_3051273530688286832[7] = 1;
   out_3051273530688286832[8] = 0;
   out_3051273530688286832[9] = 0;
   out_3051273530688286832[10] = 0;
   out_3051273530688286832[11] = 0;
   out_3051273530688286832[12] = 0;
   out_3051273530688286832[13] = 0;
   out_3051273530688286832[14] = 0;
   out_3051273530688286832[15] = 0;
   out_3051273530688286832[16] = 0;
   out_3051273530688286832[17] = 0;
   out_3051273530688286832[18] = 0;
   out_3051273530688286832[19] = 0;
   out_3051273530688286832[20] = 0;
   out_3051273530688286832[21] = 0;
   out_3051273530688286832[22] = 0;
   out_3051273530688286832[23] = 0;
   out_3051273530688286832[24] = 0;
   out_3051273530688286832[25] = 0;
   out_3051273530688286832[26] = 0;
   out_3051273530688286832[27] = 0;
   out_3051273530688286832[28] = 0;
   out_3051273530688286832[29] = 0;
   out_3051273530688286832[30] = 1;
   out_3051273530688286832[31] = 0;
   out_3051273530688286832[32] = 0;
   out_3051273530688286832[33] = 0;
   out_3051273530688286832[34] = 0;
   out_3051273530688286832[35] = 0;
   out_3051273530688286832[36] = 0;
   out_3051273530688286832[37] = 0;
   out_3051273530688286832[38] = 0;
   out_3051273530688286832[39] = 0;
   out_3051273530688286832[40] = 0;
   out_3051273530688286832[41] = 0;
   out_3051273530688286832[42] = 0;
   out_3051273530688286832[43] = 0;
   out_3051273530688286832[44] = 0;
   out_3051273530688286832[45] = 0;
   out_3051273530688286832[46] = 0;
   out_3051273530688286832[47] = 0;
   out_3051273530688286832[48] = 0;
   out_3051273530688286832[49] = 0;
   out_3051273530688286832[50] = 0;
   out_3051273530688286832[51] = 0;
   out_3051273530688286832[52] = 0;
   out_3051273530688286832[53] = 1;
   out_3051273530688286832[54] = 0;
   out_3051273530688286832[55] = 0;
   out_3051273530688286832[56] = 0;
   out_3051273530688286832[57] = 0;
   out_3051273530688286832[58] = 0;
   out_3051273530688286832[59] = 0;
   out_3051273530688286832[60] = 0;
   out_3051273530688286832[61] = 0;
   out_3051273530688286832[62] = 0;
   out_3051273530688286832[63] = 0;
   out_3051273530688286832[64] = 0;
   out_3051273530688286832[65] = 0;
}
void h_32(double *state, double *unused, double *out_6892861438456163734) {
   out_6892861438456163734[0] = state[3];
   out_6892861438456163734[1] = state[4];
   out_6892861438456163734[2] = state[5];
   out_6892861438456163734[3] = state[6];
}
void H_32(double *state, double *unused, double *out_267615366269869239) {
   out_267615366269869239[0] = 0;
   out_267615366269869239[1] = 0;
   out_267615366269869239[2] = 0;
   out_267615366269869239[3] = 1;
   out_267615366269869239[4] = 0;
   out_267615366269869239[5] = 0;
   out_267615366269869239[6] = 0;
   out_267615366269869239[7] = 0;
   out_267615366269869239[8] = 0;
   out_267615366269869239[9] = 0;
   out_267615366269869239[10] = 0;
   out_267615366269869239[11] = 0;
   out_267615366269869239[12] = 0;
   out_267615366269869239[13] = 0;
   out_267615366269869239[14] = 0;
   out_267615366269869239[15] = 0;
   out_267615366269869239[16] = 0;
   out_267615366269869239[17] = 0;
   out_267615366269869239[18] = 0;
   out_267615366269869239[19] = 0;
   out_267615366269869239[20] = 0;
   out_267615366269869239[21] = 0;
   out_267615366269869239[22] = 0;
   out_267615366269869239[23] = 0;
   out_267615366269869239[24] = 0;
   out_267615366269869239[25] = 0;
   out_267615366269869239[26] = 1;
   out_267615366269869239[27] = 0;
   out_267615366269869239[28] = 0;
   out_267615366269869239[29] = 0;
   out_267615366269869239[30] = 0;
   out_267615366269869239[31] = 0;
   out_267615366269869239[32] = 0;
   out_267615366269869239[33] = 0;
   out_267615366269869239[34] = 0;
   out_267615366269869239[35] = 0;
   out_267615366269869239[36] = 0;
   out_267615366269869239[37] = 0;
   out_267615366269869239[38] = 0;
   out_267615366269869239[39] = 0;
   out_267615366269869239[40] = 0;
   out_267615366269869239[41] = 0;
   out_267615366269869239[42] = 0;
   out_267615366269869239[43] = 0;
   out_267615366269869239[44] = 0;
   out_267615366269869239[45] = 0;
   out_267615366269869239[46] = 0;
   out_267615366269869239[47] = 0;
   out_267615366269869239[48] = 0;
   out_267615366269869239[49] = 1;
   out_267615366269869239[50] = 0;
   out_267615366269869239[51] = 0;
   out_267615366269869239[52] = 0;
   out_267615366269869239[53] = 0;
   out_267615366269869239[54] = 0;
   out_267615366269869239[55] = 0;
   out_267615366269869239[56] = 0;
   out_267615366269869239[57] = 0;
   out_267615366269869239[58] = 0;
   out_267615366269869239[59] = 0;
   out_267615366269869239[60] = 0;
   out_267615366269869239[61] = 0;
   out_267615366269869239[62] = 0;
   out_267615366269869239[63] = 0;
   out_267615366269869239[64] = 0;
   out_267615366269869239[65] = 0;
   out_267615366269869239[66] = 0;
   out_267615366269869239[67] = 0;
   out_267615366269869239[68] = 0;
   out_267615366269869239[69] = 0;
   out_267615366269869239[70] = 0;
   out_267615366269869239[71] = 0;
   out_267615366269869239[72] = 1;
   out_267615366269869239[73] = 0;
   out_267615366269869239[74] = 0;
   out_267615366269869239[75] = 0;
   out_267615366269869239[76] = 0;
   out_267615366269869239[77] = 0;
   out_267615366269869239[78] = 0;
   out_267615366269869239[79] = 0;
   out_267615366269869239[80] = 0;
   out_267615366269869239[81] = 0;
   out_267615366269869239[82] = 0;
   out_267615366269869239[83] = 0;
   out_267615366269869239[84] = 0;
   out_267615366269869239[85] = 0;
   out_267615366269869239[86] = 0;
   out_267615366269869239[87] = 0;
}
void h_13(double *state, double *unused, double *out_6939087373795999189) {
   out_6939087373795999189[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6939087373795999189[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6939087373795999189[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2344787966839707023) {
   out_2344787966839707023[0] = 0;
   out_2344787966839707023[1] = 0;
   out_2344787966839707023[2] = 0;
   out_2344787966839707023[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2344787966839707023[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2344787966839707023[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2344787966839707023[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2344787966839707023[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2344787966839707023[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2344787966839707023[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2344787966839707023[10] = 0;
   out_2344787966839707023[11] = 0;
   out_2344787966839707023[12] = 0;
   out_2344787966839707023[13] = 0;
   out_2344787966839707023[14] = 0;
   out_2344787966839707023[15] = 0;
   out_2344787966839707023[16] = 0;
   out_2344787966839707023[17] = 0;
   out_2344787966839707023[18] = 0;
   out_2344787966839707023[19] = 0;
   out_2344787966839707023[20] = 0;
   out_2344787966839707023[21] = 0;
   out_2344787966839707023[22] = 0;
   out_2344787966839707023[23] = 0;
   out_2344787966839707023[24] = 0;
   out_2344787966839707023[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2344787966839707023[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2344787966839707023[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2344787966839707023[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2344787966839707023[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2344787966839707023[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2344787966839707023[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2344787966839707023[32] = 0;
   out_2344787966839707023[33] = 0;
   out_2344787966839707023[34] = 0;
   out_2344787966839707023[35] = 0;
   out_2344787966839707023[36] = 0;
   out_2344787966839707023[37] = 0;
   out_2344787966839707023[38] = 0;
   out_2344787966839707023[39] = 0;
   out_2344787966839707023[40] = 0;
   out_2344787966839707023[41] = 0;
   out_2344787966839707023[42] = 0;
   out_2344787966839707023[43] = 0;
   out_2344787966839707023[44] = 0;
   out_2344787966839707023[45] = 0;
   out_2344787966839707023[46] = 0;
   out_2344787966839707023[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2344787966839707023[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2344787966839707023[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2344787966839707023[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2344787966839707023[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2344787966839707023[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2344787966839707023[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2344787966839707023[54] = 0;
   out_2344787966839707023[55] = 0;
   out_2344787966839707023[56] = 0;
   out_2344787966839707023[57] = 0;
   out_2344787966839707023[58] = 0;
   out_2344787966839707023[59] = 0;
   out_2344787966839707023[60] = 0;
   out_2344787966839707023[61] = 0;
   out_2344787966839707023[62] = 0;
   out_2344787966839707023[63] = 0;
   out_2344787966839707023[64] = 0;
   out_2344787966839707023[65] = 0;
}
void h_14(double *state, double *unused, double *out_6011904027858753050) {
   out_6011904027858753050[0] = state[10];
   out_6011904027858753050[1] = state[11];
   out_6011904027858753050[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7871640749293879925) {
   out_7871640749293879925[0] = 0;
   out_7871640749293879925[1] = 0;
   out_7871640749293879925[2] = 0;
   out_7871640749293879925[3] = 0;
   out_7871640749293879925[4] = 0;
   out_7871640749293879925[5] = 0;
   out_7871640749293879925[6] = 0;
   out_7871640749293879925[7] = 0;
   out_7871640749293879925[8] = 0;
   out_7871640749293879925[9] = 0;
   out_7871640749293879925[10] = 1;
   out_7871640749293879925[11] = 0;
   out_7871640749293879925[12] = 0;
   out_7871640749293879925[13] = 0;
   out_7871640749293879925[14] = 0;
   out_7871640749293879925[15] = 0;
   out_7871640749293879925[16] = 0;
   out_7871640749293879925[17] = 0;
   out_7871640749293879925[18] = 0;
   out_7871640749293879925[19] = 0;
   out_7871640749293879925[20] = 0;
   out_7871640749293879925[21] = 0;
   out_7871640749293879925[22] = 0;
   out_7871640749293879925[23] = 0;
   out_7871640749293879925[24] = 0;
   out_7871640749293879925[25] = 0;
   out_7871640749293879925[26] = 0;
   out_7871640749293879925[27] = 0;
   out_7871640749293879925[28] = 0;
   out_7871640749293879925[29] = 0;
   out_7871640749293879925[30] = 0;
   out_7871640749293879925[31] = 0;
   out_7871640749293879925[32] = 0;
   out_7871640749293879925[33] = 1;
   out_7871640749293879925[34] = 0;
   out_7871640749293879925[35] = 0;
   out_7871640749293879925[36] = 0;
   out_7871640749293879925[37] = 0;
   out_7871640749293879925[38] = 0;
   out_7871640749293879925[39] = 0;
   out_7871640749293879925[40] = 0;
   out_7871640749293879925[41] = 0;
   out_7871640749293879925[42] = 0;
   out_7871640749293879925[43] = 0;
   out_7871640749293879925[44] = 0;
   out_7871640749293879925[45] = 0;
   out_7871640749293879925[46] = 0;
   out_7871640749293879925[47] = 0;
   out_7871640749293879925[48] = 0;
   out_7871640749293879925[49] = 0;
   out_7871640749293879925[50] = 0;
   out_7871640749293879925[51] = 0;
   out_7871640749293879925[52] = 0;
   out_7871640749293879925[53] = 0;
   out_7871640749293879925[54] = 0;
   out_7871640749293879925[55] = 0;
   out_7871640749293879925[56] = 1;
   out_7871640749293879925[57] = 0;
   out_7871640749293879925[58] = 0;
   out_7871640749293879925[59] = 0;
   out_7871640749293879925[60] = 0;
   out_7871640749293879925[61] = 0;
   out_7871640749293879925[62] = 0;
   out_7871640749293879925[63] = 0;
   out_7871640749293879925[64] = 0;
   out_7871640749293879925[65] = 0;
}
void h_33(double *state, double *unused, double *out_5996726837204422069) {
   out_5996726837204422069[0] = state[16];
   out_5996726837204422069[1] = state[17];
   out_5996726837204422069[2] = state[18];
}
void H_33(double *state, double *unused, double *out_99283473950570772) {
   out_99283473950570772[0] = 0;
   out_99283473950570772[1] = 0;
   out_99283473950570772[2] = 0;
   out_99283473950570772[3] = 0;
   out_99283473950570772[4] = 0;
   out_99283473950570772[5] = 0;
   out_99283473950570772[6] = 0;
   out_99283473950570772[7] = 0;
   out_99283473950570772[8] = 0;
   out_99283473950570772[9] = 0;
   out_99283473950570772[10] = 0;
   out_99283473950570772[11] = 0;
   out_99283473950570772[12] = 0;
   out_99283473950570772[13] = 0;
   out_99283473950570772[14] = 0;
   out_99283473950570772[15] = 0;
   out_99283473950570772[16] = 1;
   out_99283473950570772[17] = 0;
   out_99283473950570772[18] = 0;
   out_99283473950570772[19] = 0;
   out_99283473950570772[20] = 0;
   out_99283473950570772[21] = 0;
   out_99283473950570772[22] = 0;
   out_99283473950570772[23] = 0;
   out_99283473950570772[24] = 0;
   out_99283473950570772[25] = 0;
   out_99283473950570772[26] = 0;
   out_99283473950570772[27] = 0;
   out_99283473950570772[28] = 0;
   out_99283473950570772[29] = 0;
   out_99283473950570772[30] = 0;
   out_99283473950570772[31] = 0;
   out_99283473950570772[32] = 0;
   out_99283473950570772[33] = 0;
   out_99283473950570772[34] = 0;
   out_99283473950570772[35] = 0;
   out_99283473950570772[36] = 0;
   out_99283473950570772[37] = 0;
   out_99283473950570772[38] = 0;
   out_99283473950570772[39] = 1;
   out_99283473950570772[40] = 0;
   out_99283473950570772[41] = 0;
   out_99283473950570772[42] = 0;
   out_99283473950570772[43] = 0;
   out_99283473950570772[44] = 0;
   out_99283473950570772[45] = 0;
   out_99283473950570772[46] = 0;
   out_99283473950570772[47] = 0;
   out_99283473950570772[48] = 0;
   out_99283473950570772[49] = 0;
   out_99283473950570772[50] = 0;
   out_99283473950570772[51] = 0;
   out_99283473950570772[52] = 0;
   out_99283473950570772[53] = 0;
   out_99283473950570772[54] = 0;
   out_99283473950570772[55] = 0;
   out_99283473950570772[56] = 0;
   out_99283473950570772[57] = 0;
   out_99283473950570772[58] = 0;
   out_99283473950570772[59] = 0;
   out_99283473950570772[60] = 0;
   out_99283473950570772[61] = 0;
   out_99283473950570772[62] = 1;
   out_99283473950570772[63] = 0;
   out_99283473950570772[64] = 0;
   out_99283473950570772[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3201977696260257895) {
  H(in_vec, out_3201977696260257895);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_997666715504881949) {
  err_fun(nom_x, delta_x, out_997666715504881949);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1105659959287770713) {
  inv_err_fun(nom_x, true_x, out_1105659959287770713);
}
void live_H_mod_fun(double *state, double *out_3225137284270052937) {
  H_mod_fun(state, out_3225137284270052937);
}
void live_f_fun(double *state, double dt, double *out_6676648528904182614) {
  f_fun(state,  dt, out_6676648528904182614);
}
void live_F_fun(double *state, double dt, double *out_2422814851340655634) {
  F_fun(state,  dt, out_2422814851340655634);
}
void live_h_4(double *state, double *unused, double *out_7905629914609901013) {
  h_4(state, unused, out_7905629914609901013);
}
void live_H_4(double *state, double *unused, double *out_6417935588060894208) {
  H_4(state, unused, out_6417935588060894208);
}
void live_h_9(double *state, double *unused, double *out_6011904027858753050) {
  h_9(state, unused, out_6011904027858753050);
}
void live_H_9(double *state, double *unused, double *out_7871640749293879925) {
  H_9(state, unused, out_7871640749293879925);
}
void live_h_10(double *state, double *unused, double *out_4787295524011749156) {
  h_10(state, unused, out_4787295524011749156);
}
void live_H_10(double *state, double *unused, double *out_2791411260120262675) {
  H_10(state, unused, out_2791411260120262675);
}
void live_h_12(double *state, double *unused, double *out_1064618350480509991) {
  h_12(state, unused, out_1064618350480509991);
}
void live_H_12(double *state, double *unused, double *out_5796836563013300541) {
  H_12(state, unused, out_5796836563013300541);
}
void live_h_35(double *state, double *unused, double *out_6961984814518061679) {
  h_35(state, unused, out_6961984814518061679);
}
void live_H_35(double *state, double *unused, double *out_3051273530688286832) {
  H_35(state, unused, out_3051273530688286832);
}
void live_h_32(double *state, double *unused, double *out_6892861438456163734) {
  h_32(state, unused, out_6892861438456163734);
}
void live_H_32(double *state, double *unused, double *out_267615366269869239) {
  H_32(state, unused, out_267615366269869239);
}
void live_h_13(double *state, double *unused, double *out_6939087373795999189) {
  h_13(state, unused, out_6939087373795999189);
}
void live_H_13(double *state, double *unused, double *out_2344787966839707023) {
  H_13(state, unused, out_2344787966839707023);
}
void live_h_14(double *state, double *unused, double *out_6011904027858753050) {
  h_14(state, unused, out_6011904027858753050);
}
void live_H_14(double *state, double *unused, double *out_7871640749293879925) {
  H_14(state, unused, out_7871640749293879925);
}
void live_h_33(double *state, double *unused, double *out_5996726837204422069) {
  h_33(state, unused, out_5996726837204422069);
}
void live_H_33(double *state, double *unused, double *out_99283473950570772) {
  H_33(state, unused, out_99283473950570772);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
